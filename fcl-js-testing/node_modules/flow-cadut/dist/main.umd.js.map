{"version":3,"file":"main.umd.js","sources":["../src/env.js","../src/imports.js","../src/fixer.js","../src/strings.js","../src/parser.js","../src/type-checker.js","../src/plugins.js","../src/args.js","../src/const.js","../src/address.js","../src/chain.js","../src/events.js","../src/signers.js","../src/interactions.js"],"sourcesContent":["/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { config } from \"@onflow/config\";\n\nexport const DEPLOYED_CONTRACTS = {\n  emulator: {\n    FungibleToken: \"0xee82856bf20e2aa6\",\n\n    FlowFees: \"0xe5a8b7f23e8b548f\",\n    FlowStorageFees: \"0xf8d6e0586b0a20c7\",\n    FlowToken: \"0x0ae53cb6e3f42a79\",\n  },\n  testnet: {\n    FungibleToken: \"0x9a0766d93b6608b7\",\n    NonFungibleToken: \"0x631e88ae7f1d7c20\",\n\n    FlowClusterQC: \"0x9eca2b38b18b5dfe\",\n    FlowDKG: \"0x9eca2b38b18b5dfe\",\n    FlowEpoch: \"0x9eca2b38b18b5dfe\",\n    FlowIDTableStaking: \"0x9eca2b38b18b5dfe\",\n    FlowToken: \"0x7e60df042a9c0868\",\n    LockedTokens: \"0x95e019a17d0e23d7\",\n    StakingProxy: \"0x7aad92e5a0715d21\",\n    FlowStakingCollection: \"0x95e019a17d0e23d7\",\n\n    FUSD: \"0xe223d8a629e49c68\",\n  },\n  mainnet: {\n    FungibleToken: \"0xf233dcee88fe0abe\",\n    NonFungibleToken: \"0x1d7e57aa55817448\",\n\n    FlowClusterQC: \"0x8624b52f9ddcd04a\",\n    FlowDKG: \"0x8624b52f9ddcd04a\",\n    FlowEpoch: \"0x8624b52f9ddcd04a\",\n    FlowIDTableStaking: \"0x8624b52f9ddcd04a\",\n    FlowFees: \"0xf919ee77447b7497\",\n    FlowToken: \"0x1654653399040a61\",\n    LockedTokens: \"0x8d0e87b65159ae63\",\n    StakingProxy: \"0x62430cf28c26d095\",\n    FlowStakingCollection: \"0x8d0e87b65159ae63\",\n\n    FUSD: \"0x3c5959b568896393\",\n  },\n};\n\nexport const EXT_ENVIRONMENT = {\n  emulator: {},\n  testnet: {},\n  mainnet: {},\n};\n\nexport const extendEnvironment = (branch) => {\n  for (const key of Object.keys(EXT_ENVIRONMENT)){\n    const value = branch[key];\n    const { name } = branch;\n    const branchValue = typeof branch[key] === \"object\" ? value : { [name]: value };\n    EXT_ENVIRONMENT[key] = {\n      ...EXT_ENVIRONMENT[key],\n      ...branchValue,\n    };\n  }\n};\n\nexport const ACCESS_NODES = {\n  mainnet: \"https://access-mainnet-beta.onflow.org\",\n  testnet: \"https://access-testnet.onflow.org\",\n  emulator: \"http://localhost:8080\",\n};\n\nexport const getEnvironmentName = async () => {\n  return (await config().get(\"ix.env\")) || \"emulator\";\n};\n\nexport const getEnvironment = async () => {\n  const env = await getEnvironmentName();\n  const core = DEPLOYED_CONTRACTS[env] || DEPLOYED_CONTRACTS.emulator;\n  const extended = EXT_ENVIRONMENT[env] || EXT_ENVIRONMENT.emulator;\n\n  return {\n    ...core,\n    ...extended,\n  };\n};\n\nexport const setEnvironment = async (networkName = \"emulator\", options = {}) => {\n  const network = networkName.toLowerCase();\n\n  if (!DEPLOYED_CONTRACTS[network]) {\n    throw new Error(\n      `Provided value \"${network}\" is not supported. Try \"emulator\", \"testnet\" or \"mainnet\". Default: \"emulator\"`\n    );\n  }\n\n  const { port, endpoint, limit, extend } = options;\n  const portBased =\n    network === \"emulator\" && port ? `http://localhost:${port}` : ACCESS_NODES[network];\n  const accessNode = endpoint || portBased;\n\n  await config().put(\"ix.env\", network);\n\n  if (limit) {\n    await config().put(\"ix.executionLimit\", limit);\n  }\n\n  if (extend){\n    extendEnvironment(extend)\n  }\n\n  await config().put(\"accessNode.api\", accessNode);\n};\n","/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getPairs = (line) => {\n  return line\n    .split(/\\s/)\n    .map((item) => item.replace(/\\s/g, \"\"))\n    .filter((item) => item.length > 0 && item !== \"import\" && item !== \"from\");\n};\n\nconst collect = (acc, item) => {\n  const [contract, address] = item;\n  acc[contract] = address;\n  return acc;\n};\n\n/**\n * Returns address map for contracts defined in template code.\n * @param {string} code - Cadence code to parse.\n * @returns {*}\n */\nexport const extractImports = (code) => {\n  if (!code || code.length === 0) {\n    return {};\n  }\n  return code\n    .split(\"\\n\")\n    .filter((line) => line.includes(\"import\"))\n    .map(getPairs)\n    .reduce(collect, {});\n};\n\n/**\n * Returns list of missing imports.\n * @param {string} code - template cadence code\n * @param {Object.<string, string>} addressMap - contract name as a key and address where it's deployed as value\n */\nexport const missingImports = (code, addressMap = {}) => {\n  const importsList = extractImports(code);\n  const missing = [];\n\n  for (const key in importsList) {\n    if (!addressMap[key] && Object.prototype.hasOwnProperty.call(importsList, key)) {\n      missing.push(key);\n    }\n  }\n\n  return missing;\n};\n\n/**\n * Reports missing imports.\n * @param {Array.<string>} list - list of missing imports\n * @param {string} prefix - error message prefix\n */\nexport const report = (list = [], prefix = \"\") => {\n  const errorMessage = `Missing imports for contracts:`;\n  const message = prefix ? `${prefix} ${errorMessage}` : errorMessage;\n  console.error(message, list);\n};\n\n/**\n * Reports missing imports.\n * @param {string} code - template cadence code\n * @param {Object.<string, string>} addressMap - contract name as a key and address where it's deployed as value\n * @param {string} [prefix] - prefix to add to error message\n */\nexport const reportMissingImports = (code, addressMap, prefix = \"\") => {\n  const list = missingImports(code, addressMap);\n  if (list.length > 0) {\n    report(list, prefix);\n  }\n};\n\nconst REGEXP_IMPORT = /(\\s*import\\s*)([\\w\\d]+)(\\s+from\\s*)([\\w\\d\".\\\\/]+)/g;\n\n/**\n * Returns Cadence template code with replaced import addresses\n * @param {string} code - Cadence template code.\n * @param {{string:string}} [addressMap={}] - name/address map or function to use as lookup table\n * for addresses in import statements.\n * @param byName - lag to indicate whether we shall use names of the contracts.\n * @returns {*}\n */\nexport const replaceImportAddresses = (code, addressMap, byName = true) => {\n  return code.replace(REGEXP_IMPORT, (match, imp, contract, _, address) => {\n    const key = byName ? contract : address;\n    const newAddress = addressMap instanceof Function ? addressMap(key) : addressMap[key];\n\n    // If the address is not inside addressMap we shall not alter import statement\n    const validAddress = newAddress || address;\n    return `${imp}${contract} from ${validAddress}`;\n  });\n};\n","/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const sansPrefix = (address) => {\n  if (address == null) return null;\n  return address.replace(/^0x/, \"\");\n};\n\nexport const withPrefix = (address) => {\n  if (address == null) return null;\n  return \"0x\" + sansPrefix(address);\n};\n\nexport const padAddress = (address) => {\n  return \"0x\" + sansPrefix(address).padStart(16, \"0\");\n};\n\nexport const toFixedValue = (val) => parseFloat(val).toFixed(8);\n\nexport const domains = [\"public\", \"private\", \"storage\"];\n\nexport const parsePath = (path) => {\n  if (path.startsWith(\"/\")) {\n    const parts = path.slice(1).split(\"/\");\n    if (parts.length !== 2) {\n      throw Error(\"Incorrect Path - identifier missing\");\n    }\n    if (!domains.includes(parts[0])){\n      throw Error(\"Incorrect Path - wrong domain\")\n    }\n    const [domain, identifier] = parts;\n    return { domain, identifier };\n  }\n  throw Error(\"Incorrect Path - shall start with `/`\");\n};\n","/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const capitalizeFirstLetter = (input) => {\n  const [first] = input.split(\"\");\n  return first.toUpperCase() + input.slice(1);\n};\n\nexport const underscoreToCamelCase = (text) => {\n  return text\n    .replace(/-/g, \"_\")\n    .split(\"_\")\n    .map((word, i) => (i > 0 ? capitalizeFirstLetter(word) : word))\n    .join(\"\");\n};\n\nexport const trimAndSplit = (input, trimWith, splitBy) => {\n  if (splitBy) {\n    return input.replace(trimWith, \"\").split(splitBy);\n  }\n  return input.replace(trimWith, \"\").split(getSplitCharacter(input));\n};\n\nexport const getSplitCharacter = (input) => {\n  switch (true) {\n    case input.indexOf(\"//\") >= 0:\n      return \"//\";\n    case input.indexOf(\"/\") >= 0:\n      return \"/\";\n    case input.indexOf(\"\\\\\") >= 0:\n      return \"\\\\\";\n    default:\n      return \"\";\n  }\n};\n\nexport const collapseSpaces = (input) => input.replace(/\\s+/g, \" \");\nexport const removeSpaces = (input) => input.replace(/\\s+/g, \"\");\nexport const stripNewLines = (input) => input.replace(/\\r\\n|\\n|\\r/g, \" \");\n","/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { collapseSpaces } from \"./strings\";\n\nexport const CONTRACT = \"contract\";\nexport const TRANSACTION = \"transaction\";\nexport const SCRIPT = \"script\";\nexport const UNKNOWN = \"unknown\";\n\nexport const generateSchema = (argsDefinition) =>\n  argsDefinition\n    .split(\",\")\n    .map((item) => item.replace(/\\s*/g, \"\"))\n    .filter((item) => item !== \"\");\n\nexport const stripComments = (code) => {\n  const commentsRegExp = /(\\/\\*[\\s\\S]*?\\*\\/)|(\\/\\/.*)/g;\n  return code.replace(commentsRegExp, \"\");\n};\n\nexport const extract = (code, keyWord) => {\n  const noComments = stripComments(code);\n  const target = collapseSpaces(noComments.replace(/[\\n\\r]/g, \"\"));\n\n  if (target) {\n    const regexp = new RegExp(keyWord, \"g\");\n    const match = regexp.exec(target);\n\n    if (match) {\n      if (match[1] === \"\") {\n        return [];\n      }\n      return generateSchema(match[1]);\n    }\n  }\n  return [];\n};\n\nexport const extractSigners = (code) => {\n  return extract(code, `(?:prepare\\\\s*\\\\(\\\\s*)([^\\\\)]*)(?:\\\\))`);\n};\n\nexport const extractScriptArguments = (code) => {\n  return extract(code, `(?:fun\\\\s+main\\\\s*\\\\(\\\\s*)([^\\\\)]*)(?:\\\\))`);\n};\n\nexport const extractTransactionArguments = (code) => {\n  return extract(code, `(?:transaction\\\\s*\\\\(\\\\s*)([^\\\\)]*)(?:\\\\))`);\n};\n\nexport const extractContractName = (code) => {\n  return extractContractParameters(code).contractName;\n};\n\nexport const extractContractParameters = (code) => {\n  const complexMatcher = /(resource|struct)\\s+\\w+\\s*{[\\s\\S]+?}/g;\n  const contractNameMatcher =\n    /(?:access\\(\\w+\\)|pub)\\s+contract\\s+(?:interface)*\\s*(\\w*)(\\s*{[.\\s\\S]*init\\s*\\((.*?)\\)[.\\s\\S]*})?/g;\n\n  const noComments = stripComments(code);\n  const noComplex = noComments.replace(complexMatcher, \"\");\n  const matches = contractNameMatcher.exec(noComplex);\n\n  if (!matches || matches.length < 2) {\n    throw new Error(\"Contract Error: can't find name of the contract\");\n  }\n\n  return {\n    contractName: matches[1],\n    args: matches[3] || \"\",\n  };\n};\n\nexport const getTemplateInfo = (template) => {\n  const contractMatcher = /\\w+\\s+contract\\s+(\\w*\\s*)\\w*/g;\n  const transactionMatcher = /transaction\\s*(\\(\\s*\\))*\\s*/g;\n  const scriptMatcher = /pub\\s+fun\\s+main\\s*/g;\n\n  const code = stripComments(template);\n\n  if (transactionMatcher.test(code)) {\n    const signers = extractSigners(code);\n    const args = extractTransactionArguments(code);\n    return {\n      type: TRANSACTION,\n      signers: signers.length,\n      args: args,\n    };\n  }\n\n  if (scriptMatcher.test(code)) {\n    const args = extractScriptArguments(code);\n    return {\n      type: SCRIPT,\n      args: args,\n    };\n  }\n\n  if (contractMatcher.test(code)) {\n    const { contractName, args } = extractContractParameters(code);\n    return {\n      type: CONTRACT,\n      signers: 1,\n      args,\n      contractName,\n    };\n  }\n\n  return {\n    type: UNKNOWN,\n  };\n};\n\nexport const getPragmaNotes = (template) => {\n  const regexp = /\\/{3}\\s*pragma\\s*(.*)/g;\n  const matches = template.match(regexp);\n\n  return matches.reduce((acc, line) => {\n    const match = line.match(/\\/{3}\\s*pragma\\s+(\\w*)\\s+(.*)/);\n    const [, name, value] = match;\n    acc[name] = value;\n    return acc;\n  }, {});\n};\n","/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const wrongType = (type) => !type || typeof type != \"string\";\n\nexport const isBasicNumType = (type) => {\n  if (wrongType(type)) return false;\n  return type.startsWith(\"Int\") || type.startsWith(\"UInt\") || type.startsWith(\"Word\");\n};\n\nexport const isFixedNumType = (type) => {\n  if (wrongType(type)) return false;\n  return type.startsWith(\"Fix64\") || type.startsWith(\"UFix64\");\n};\n\nexport const isString = (type) => type === \"String\";\nexport const isCharacter = (type) => type === \"Character\";\nexport const isBoolean = (type) => type === \"Bool\";\nexport const isAddress = (type) => type === \"Address\" || type === \"Address?\";\nexport const isPath = (type) => type === \"Path\" || type === \"Path?\";\n\nexport const isBasicType = (type) => {\n  if (wrongType(type)) return false;\n\n  let fixedType = type.endsWith(\"?\") ? type.slice(0, -1) : type;\n  return (\n    isBasicNumType(fixedType) ||\n    isString(fixedType) ||\n    isCharacter(fixedType) ||\n    isBoolean(fixedType)\n  );\n};\n\nexport const isArray = (type) => {\n  if (wrongType(type)) return false;\n\n  const clearType = type.replace(/\\s/g, \"\");\n  return clearType.startsWith(\"[\") && clearType.endsWith(\"]\");\n};\n\nexport const isDictionary = (type) => {\n  if (wrongType(type)) return false;\n\n  const clearType = type.replace(/\\s/g, \"\");\n  return clearType.startsWith(\"{\") && clearType.endsWith(\"}\");\n};\n\nexport const isComplexType = (type) => isArray(type) || isDictionary(type);\n","import { config } from \"@onflow/fcl\";\n\nexport const PLUGIN_TYPES = {\n  ARGUMENT: \"argument\",\n};\n\nexport const registerPlugin = async (plugin) => {\n  const { type } = plugin;\n  const registeredPlugins = await config().get(\"ix.plugins\");\n  const plugins = registeredPlugins || {};\n  const typedPlugins = plugins[type] || [];\n\n  await config().put(\"ix.plugins\", {\n    ...plugins,\n    [type]: [...typedPlugins, plugin],\n  });\n};\n\nexport const getPlugins = async (type) => {\n  const registeredPlugins = await config().get(\"ix.plugins\");\n  const plugins = registeredPlugins || {};\n  const byType = plugins[type];\n\n  if (byType && byType.length > 0) {\n    return byType;\n  }\n  return false;\n};\n\nexport const applyPlugins = async (props, plugins) => {\n  let type = props.type;\n  let value = props.value;\n\n  for (let i = 0; i < plugins.length; i++) {\n    const { resolver } = plugins[i];\n    const result = await resolver(type, value);\n    type = result.type;\n    value = result.value;\n  }\n\n  return { type, value };\n};\n","/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as t from \"@onflow/types\";\nimport * as fcl from \"@onflow/fcl\";\n\nimport { parsePath, toFixedValue, withPrefix } from \"./fixer\";\nimport { getTemplateInfo } from \"./parser\";\nimport {\n  isBasicType,\n  isFixedNumType,\n  isAddress,\n  isPath,\n  isArray,\n  isDictionary,\n  isComplexType,\n  wrongType,\n  isBasicNumType,\n} from \"./type-checker\";\n\nimport { removeSpaces } from \"./strings\";\nimport { getPlugins, applyPlugins, PLUGIN_TYPES } from \"./plugins\";\n\nconst throwTypeError = (msg) => {\n  throw new Error(\"Type Error: \" + msg);\n};\n\nexport const splitArgs = (pair) => {\n  return pair\n    .split(/(\\w+)\\s*:\\s*([\\w{}[\\]:\\s?]*)/)\n    .filter((item) => item !== \"\")\n    .map((item) => item.replace(/\\s*/g, \"\"));\n};\n\nexport const argType = (pair) => splitArgs(pair)[1];\n\nexport const getDictionaryTypes = (type) => {\n  const match = /{(.*)}/.exec(type);\n  return match[1]\n    .split(/([^:]*):(.*)/)\n    .map((item) => item.replace(/\\s/g, \"\"))\n    .filter((item) => item);\n};\n\nexport const getArrayType = (type) => {\n  const match = /\\[(.*)\\]/.exec(type);\n  return removeSpaces(match[1]);\n};\n\n/**\n * Reports missing arguments.\n * @param {number} found - number of arguments passed into method\n * @param {number} required - number of arguments required to execute the code\n * @param {string} prefix - error message prefix\n */\nexport const reportArguments = (found, required, prefix = \"\") => {\n  if (required > found) {\n    const errorMessage = `Incorrect number of arguments: found ${found} of ${required}`;\n    const message = prefix ? `${prefix} ${errorMessage}` : errorMessage;\n    console.error(message);\n  }\n};\n\n/**\n * Reports missing items.\n * @param {string} itemType - name of the missing item\n * @param {number} found - number of arguments passed into method\n * @param {number} required - number of arguments required to execute the code\n * @param {string} prefix - error message prefix\n */\nexport const reportMissing = (itemType = \"items\", found, required, prefix = \"\") => {\n  if (required !== found) {\n    const errorMessage = `Incorrect number of ${itemType}: found ${found} of ${required}`;\n    const message = prefix ? `${prefix} ${errorMessage}` : errorMessage;\n    console.error(message);\n  }\n};\n\nexport const raw = (type) => type.slice(0, -1);\n\nexport const resolveBasicType = (type) => {\n  if (wrongType(type)) return false;\n\n  if (type.includes(\"?\")) {\n    return t.Optional(t[raw(type)]);\n  }\n  return t[type];\n};\n\nexport const resolveType = (type) => {\n  if (isComplexType(type)) {\n    switch (true) {\n      case isArray(type): {\n        const arrayType = getArrayType(type);\n        return t.Array(resolveType(arrayType));\n      }\n\n      case isDictionary(type): {\n        const [key, value] = getDictionaryTypes(type);\n        const dictionaryType = { key: resolveType(key), value: resolveType(value) };\n        return t.Dictionary(dictionaryType);\n      }\n\n      default: {\n        return resolveBasicType(type);\n      }\n    }\n  }\n  return resolveBasicType(type);\n};\n\n/**\n * Map single argument to fcl.arg representation.\n * @param {string} rawType - Cadence value type\n * @param {any} rawValue - actual value\n * @returns any - mapped fcl.arg value\n */\nexport const mapArgument = async (rawType, rawValue) => {\n  const plugins = await getPlugins(PLUGIN_TYPES.ARGUMENT);\n\n  let value = rawValue;\n  let type = rawType;\n\n  if (plugins) {\n    let applied = await applyPlugins({ type: rawType, value: rawValue }, plugins);\n    value = applied.value;\n    type = applied.type;\n  }\n\n  const resolvedType = resolveType(type);\n\n  switch (true) {\n    case isBasicType(type): {\n      return fcl.arg(value, resolvedType);\n    }\n\n    case isFixedNumType(type): {\n      // Try to parse value and throw if it fails\n      if (value === null) {\n        return fcl.arg(null, resolvedType);\n      }\n      if (isNaN(parseFloat(value))) {\n        throwTypeError(\"Expected proper value for fixed type\");\n      }\n      return fcl.arg(toFixedValue(value), resolvedType);\n    }\n\n    case isAddress(type): {\n      const prefixedAddress = withPrefix(value);\n      return fcl.arg(prefixedAddress, resolvedType);\n    }\n\n    case isPath(type): {\n      return fcl.arg(\n        parsePath(value),\n        resolvedType\n      );\n    }\n\n    case isArray(type): {\n      const arrayType = getArrayType(type);\n\n      if (isComplexType(arrayType)) {\n        const mappedValue = await Promise.all(\n          value.map(async (v) => {\n            const { value } = await mapArgument(arrayType, v);\n            return value;\n          })\n        );\n        return fcl.arg(mappedValue, resolvedType);\n      }\n\n      const result = fcl.arg(value, resolvedType);\n      return result;\n    }\n\n    case isDictionary(type): {\n      const [keyType, valueType] = getDictionaryTypes(type);\n      const finalValue = [];\n      const keys = Object.keys(value);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        let resolvedValue;\n        if (isComplexType(valueType)) {\n          resolvedValue = (await mapArgument(valueType, value[key])).value;\n        } else {\n          resolvedValue = value[key];\n        }\n\n        const fixedKey = isBasicNumType(keyType) ? parseInt(key) : key;\n\n        finalValue.push({\n          key: fixedKey,\n          value: resolvedValue,\n        });\n      }\n\n      const result = fcl.arg(finalValue, resolvedType);\n      return result;\n    }\n\n    default: {\n      throw `${type} is not supported`;\n    }\n  }\n};\n\nexport const assertType = (arg) => {\n  return arg.xform.asArgument(arg.value);\n};\n\n/**\n * Map arguments with provided schema.\n * @param {[string]} schema - array of Cadence value types\n * @param {[any]} values - array of passed values\n * @returns [any] - array of mapped fcl.arg values\n */\nexport const mapArguments = async (schema = [], values) => {\n  if (schema.length > values.length) {\n    throw new Error(\"Not enough arguments\");\n  }\n  return Promise.all(\n    values.map(async (value, i) => {\n      const mapped = await mapArgument(schema[i], value);\n      assertType(mapped);\n      return mapped;\n    })\n  );\n};\n\n/**\n * Map arguments via Cadence template.\n * @param {string} code - Cadence template\n * @param {[any]} values - array of values\n * @returns [any] - array of mapped fcl.arg\n */\nexport const mapValuesToCode = async (code, values = []) => {\n  const schema = getTemplateInfo(code).args.map(argType);\n  return mapArguments(schema, values);\n};\n\nexport const unwrap = (arr, convert) => {\n  const type = arr[arr.length - 1];\n  return arr.slice(0, -1).map((value) => convert(value, type));\n};\n\nconst rawArgs = (args) => {\n  return args.reduce((acc, arg) => {\n    const unwrapped = unwrap(arg, (value, type) => {\n      return fcl.arg(value, type);\n    });\n    acc = [...acc, ...unwrapped];\n    return acc;\n  }, []);\n};\n\nexport const resolveArguments = async (args, code) => {\n  if (args.length === 0) {\n    return [];\n  }\n\n  // We can check first element in array. If it's last value is instance\n  // of @onflow/types then we assume that the rest of them are also unprocessed\n  const first = args[0];\n  if (Array.isArray(first) && first.length > 0) {\n    const last = first[first.length - 1];\n    if (last.asArgument) {\n      return rawArgs(args);\n    }\n  }\n  // Otherwise we process them and try to match them against the code\n  return mapValuesToCode(code, args);\n};\n","export const CURRENT_SPORK_ROOT = 23830813\nexport const CURRENT_SPORK_NUMBER = 16\n","export const sansPrefix = (address) => {\n  if (address == null) return null;\n  return address.replace(/^0x/, \"\");\n};\n\nexport const withPrefix = (address) => {\n  if (address == null) return null;\n  return \"0x\" + sansPrefix(address);\n};\n","import { decode, getBlock, send } from \"@onflow/fcl\";\n\nexport const getLatestBlock = async () => {\n  return send([\n    getBlock(true), // isSealed = true\n  ]).then(decode);\n};\n\nexport const getChainHeight = async () => {\n  const topBlock = await getLatestBlock();\n  return topBlock.height;\n};\n","import { send, getEventsAtBlockHeightRange, decode } from \"@onflow/fcl\";\nimport { sansPrefix } from \"./address\";\nimport { CURRENT_SPORK_ROOT } from \"./const\";\nimport { getChainHeight } from \"./chain\";\n\nexport const getEventName = (event) => {\n  const { address, contractName, eventName } = event;\n  return `A.${sansPrefix(address)}.${contractName}.${eventName}`;\n};\n\nexport const ERR_NO_ACCOUNT = \"contract shall have address field\";\nexport const ERR_NO_CONTRACT = \"contract shall have contractName field\";\nexport const ERR_NO_EVENT_NAME = \"contract shall have event name\";\nconst MAX_BLOCK_OFFSET = 249;\n\nexport const getEventsInRange = async (event, range) => {\n  if (!event.address) throw ERR_NO_ACCOUNT;\n  if (!event.contractName) throw ERR_NO_CONTRACT;\n  if (!event.eventName) throw ERR_NO_EVENT_NAME;\n\n  let fromRange, toRange;\n  if (!range) {\n    // TODO: fetch latest block\n    // TODO: try to fetch blocks\n    toRange = await getChainHeight();\n\n    // TODO: check that bottom range is OK\n    // TODO: check if bottom range can overflow spork\n    fromRange = toRange - MAX_BLOCK_OFFSET;\n\n    if (fromRange < CURRENT_SPORK_ROOT) {\n      console.warn(\n        `\"from\" value of range is lower than current spork root. setting to ${CURRENT_SPORK_ROOT}`\n      );\n      fromRange = CURRENT_SPORK_ROOT;\n    }\n  } else {\n    toRange = range.to;\n    fromRange = range.from;\n\n    if (!range.to) {\n      toRange = await getChainHeight();\n    }\n    if (!range.from) {\n      // TODO: check spork overflow\n      fromRange = toRange - MAX_BLOCK_OFFSET;\n    }\n  }\n\n  if (toRange < CURRENT_SPORK_ROOT) {\n    console.warn(\n      `\"to\" value of range is lower than current spork root. setting to ${CURRENT_SPORK_ROOT}`\n    );\n    toRange = CURRENT_SPORK_ROOT;\n  }\n\n  if (fromRange < CURRENT_SPORK_ROOT) {\n    console.warn(\n      `\"from\" value of range is lower than current spork root. setting to ${CURRENT_SPORK_ROOT}`\n    );\n    fromRange = CURRENT_SPORK_ROOT;\n  }\n\n  return send([getEventsAtBlockHeightRange(getEventName(event), fromRange, toRange)]).then(decode);\n};\n\nexport const findLatestEvents = async (event, opts = {}) => {\n  const {\n    step = 200,\n    delay = 500,\n    start = null,\n    maxRange = Infinity,\n    sporkLimit = CURRENT_SPORK_ROOT,\n  } = opts;\n  let currentRange = step;\n  let to = start || (await getChainHeight());\n  let from = to - step;\n\n  if (to < sporkLimit) {\n    console.warn(\n      `\"to\" value of range is lower than current spork root. setting to ${CURRENT_SPORK_ROOT}`\n    );\n    to = sporkLimit;\n  }\n\n  if (from < sporkLimit) {\n    console.warn(\n      `\"from\" value of range is lower than current spork root. setting to ${CURRENT_SPORK_ROOT}`\n    );\n    from = sporkLimit;\n  }\n\n  return new Promise((resolve, reject) => {\n    let intervalId;\n\n    const findEvents = async function () {\n      try {\n        console.log(`${from} -> ${to}...`);\n        const events = await getEventsInRange(event, { from, to });\n        if (events.length !== 0) {\n          clearInterval(intervalId);\n          resolve({ events });\n        } else {\n          if (currentRange > maxRange) {\n            resolve({ events, latestBlock: to });\n          }\n          // Continue looking for events\n          to = from;\n          from -= step;\n          currentRange += step;\n          setTimeout(findEvents, delay);\n        }\n      } catch (err) {\n        reject({ events: [], err, latestBlock: to });\n      }\n    };\n\n    setTimeout(findEvents, delay);\n  });\n};\n","import { ec as EC } from \"elliptic\";\nimport { SHA3 } from \"sha3\";\nimport * as fcl from \"@onflow/fcl\";\nimport { sansPrefix, withPrefix } from \"./address\";\nconst ec = new EC(\"p256\");\n\nconst hashMsgHex = (msgHex) => {\n  const sha = new SHA3(256);\n  sha.update(Buffer.from(msgHex, \"hex\"));\n  return sha.digest();\n};\n\nexport const signWithKey = (privateKey, msgHex) => {\n  const key = ec.keyFromPrivate(Buffer.from(privateKey, \"hex\"));\n  const sig = key.sign(hashMsgHex(msgHex));\n  const n = 32; // half of signature length?\n  const r = sig.r.toArrayLike(Buffer, \"be\", n);\n  const s = sig.s.toArrayLike(Buffer, \"be\", n);\n  return Buffer.concat([r, s]).toString(\"hex\");\n};\n\nexport const authorization =\n  (addr, pkey, keyId = 0) =>\n    async (account = {}) => {\n      addr = sansPrefix(addr);\n\n      const signingFunction = async (data) => ({\n        keyId,\n        addr: withPrefix(addr),\n        signature: signWithKey(pkey, data.message),\n      });\n\n      return {\n        ...account,\n        tempId: `${addr}-${keyId}`,\n        addr: fcl.sansPrefix(addr),\n        keyId,\n        signingFunction,\n      };\n    };\n\nexport const REQUIRE_PRIVATE_KEY = \"privateKey is required\"\nexport const REQUIRE_ADDRESS = \"address is required\"\nexport const WARNING_KEY_INDEX = (index) => `key index have incorrect format. found '${typeof index}', required 'num'`\n\nexport const processSigner = signer => {\n  if (typeof signer === \"object\"){\n    if(signer.privateKey === undefined){\n      throw Error(REQUIRE_PRIVATE_KEY)\n    }\n    if(signer.address === undefined){\n      throw Error(REQUIRE_ADDRESS)\n    }\n    if(signer.keyId === undefined){\n      console.warning(WARNING_KEY_INDEX(signer.keyId))\n    }\n\n    const {address, privateKey, keyId = 0} = signer;\n    return authorization(address, privateKey, keyId)\n  }\n\n  return signer\n}","/*\n * Flow Template Utilities\n *\n * Copyright 2021 Dapper Labs, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as fcl from \"@onflow/fcl\";\nimport { resolveArguments } from \"./args\";\nimport { replaceImportAddresses } from \"./imports\";\nimport { config } from \"@onflow/config\";\nimport { getEnvironment } from \"./env\";\nimport { processSigner } from \"./signers\";\n\nexport const prepareInteraction = async (props, type) => {\n  const { code, cadence, args, addressMap, limit, processed } = props;\n\n  // allow to pass code via \"cadence\" field similar to fcl.query/mutate\n  const codeTemplate = code || cadence;\n\n  const env = await getEnvironment();\n  const ixAddressMap = {\n    ...env,\n    ...addressMap,\n  };\n  const ixCode = processed ? codeTemplate : replaceImportAddresses(codeTemplate, ixAddressMap);\n\n  const ix = type === \"script\" ? [fcl.script(ixCode)] : [fcl.transaction(ixCode)];\n\n  if (args) {\n    const resolvedArgs = await resolveArguments(args, codeTemplate);\n    ix.push(fcl.args(resolvedArgs));\n  }\n\n  // Handle execution limit\n  const defaultLimit = await config().get(\"ix.executionLimit\");\n  const fallBackLimit = defaultLimit || 100;\n\n  const ixLimit = limit || fallBackLimit;\n  ix.push(fcl.limit(ixLimit));\n\n  if (type === \"transaction\") {\n    const { proposer, payer, signers = [] } = props;\n    const ixSigners = signers.length === 0 ? [payer] : signers;\n    const ixProposer = proposer || payer;\n\n    ix.push(fcl.payer(processSigner(payer)));\n    ix.push(fcl.proposer(processSigner(ixProposer)));\n    ix.push(fcl.authorizations(ixSigners.map(processSigner)));\n  }\n\n  return fcl.send(ix);\n};\n\n/**\n * Sends script code for execution.\n * Returns decoded value.\n */\n\nexport const executeScript = async (props) => {\n  const { raw = false } = props;\n  try {\n    const response = await prepareInteraction(props, \"script\");\n\n    // In some cases one might want to have raw output without decoding the response\n    if (raw) {\n      return [response.encodedData, null];\n    }\n\n    const decoded = await fcl.decode(response);\n    return [decoded, null];\n  } catch (e) {\n    return [null, e];\n  }\n};\n\nexport const waitForStatus = (statusValue) => {\n  if (typeof statusValue === \"string\") {\n    const status = statusValue.toLowerCase();\n    if (status.includes(\"final\")) {\n      return \"onceFinalized\";\n    }\n\n    if (status.includes(\"exec\")) {\n      return \"onceExecuted\";\n    }\n\n    if (status.includes(\"seal\")) {\n      return \"onceSealed\";\n    }\n  }\n\n  // wait for transaction to be sealed by default\n  console.log(\n    `⚠️ \\x1b[33mStatus value \\x1b[1m\\x1b[35m\"${statusValue}\"\\x1b[33m\\x1b[2m is not supported. Reverting to \\x1b[32m\"onceSealed\"\\x1b[0m`\n  );\n  return \"onceSealed\";\n};\n\n/**\n * Submits transaction to emulator network and waits before it will be sealed.\n * Returns transaction result.\n */\nexport const sendTransaction = async (props) => {\n  const { wait = \"seal\" } = props;\n  try {\n    const response = await prepareInteraction(props, \"transaction\");\n    if (wait) {\n      const waitMethod = waitForStatus(wait);\n      const rawResult = await fcl.tx(response)[waitMethod]();\n      const txResult = {\n        txId: response,\n        ...rawResult,\n      };\n      return [txResult, null];\n    }\n    return [response.transactionId, null];\n  } catch (e) {\n    return [null, e];\n  }\n};\n\n// TODO: add arguments for \"init\" method into template\nexport const addContractTemplate = `\n    transaction(name: String, code: String) {\n      prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n        \n        acct.contracts.add(\n          name: name,\n          code: decoded,\n        )\n      }\n    }\n  `;\nexport const updateContractTemplate = `\n  transaction(name: String, code: String){\n    prepare(acct: AuthAccount){\n      let decoded = code.decodeHex()\n      \n      if acct.contracts.get(name: name) == nil {\n        acct.contracts.add(name: name, code: decoded)\n      } else {\n        acct.contracts.update__experimental(name: name, code: decoded)\n      }\n    }\n  }\n`;\n\n// TODO: add jsdoc\nexport const hexContract = (contract) => Buffer.from(contract, \"utf8\").toString(\"hex\");\n\nexport const deployContract = async (props) => {\n  const {\n    name,\n    to,\n    payer,\n    proposer,\n    code: contractCode,\n    update = false,\n    processed = false,\n    addressMap = {},\n  } = props;\n\n  // Update imprort statement with addresses from addressMap\n  const ixContractCode = processed\n    ? contractCode\n    : replaceImportAddresses(contractCode, addressMap);\n\n  // TODO: Implement arguments for \"init\" method\n  const template = update ? addContractTemplate : updateContractTemplate;\n\n  const hexedCode = hexContract(ixContractCode);\n  const args = [name, hexedCode];\n  // Set roles\n  let ixProposer = to;\n  let ixPayer = to;\n  let ixSigners = [to];\n\n  if (payer) {\n    ixPayer = payer;\n    ixProposer = proposer || payer;\n  }\n\n  return sendTransaction({\n    payer: ixPayer,\n    proposer: ixProposer,\n    signers: ixSigners,\n    code: template,\n    args,\n  });\n};\n\nexport const updateContract = async (props) => {\n  return deployContract({ ...props, update: true });\n};\n"],"names":["DEPLOYED_CONTRACTS","emulator","FungibleToken","FlowFees","FlowStorageFees","FlowToken","testnet","NonFungibleToken","FlowClusterQC","FlowDKG","FlowEpoch","FlowIDTableStaking","LockedTokens","StakingProxy","FlowStakingCollection","FUSD","mainnet","EXT_ENVIRONMENT","extendEnvironment","branch","key","Object","keys","value","name","[object Object]","ACCESS_NODES","getEnvironment","config","get","getEnvironmentName","env","getPairs","line","split","map","item","replace","filter","length","collect","acc","contract","address","extractImports","code","includes","reduce","missingImports","addressMap","importsList","missing","prototype","hasOwnProperty","call","push","report","list","prefix","errorMessage","console","error","REGEXP_IMPORT","replaceImportAddresses","byName","match","imp","_","Function","domains","capitalizeFirstLetter","input","first","toUpperCase","slice","getSplitCharacter","indexOf","collapseSpaces","CONTRACT","TRANSACTION","SCRIPT","generateSchema","argsDefinition","stripComments","extract","keyWord","noComments","target","RegExp","exec","extractSigners","extractScriptArguments","extractTransactionArguments","extractContractParameters","noComplex","matches","Error","contractName","args","getTemplateInfo","template","test","signers","type","wrongType","isBasicNumType","startsWith","isArray","clearType","endsWith","isDictionary","isComplexType","pact","state","s","o","_settle","bind","v","then","observer","_Pact","onFulfilled","onRejected","result","this","callback","e","_this","PLUGIN_TYPES","ARGUMENT","getPlugins","registeredPlugins","byType","splitArgs","pair","argType","getDictionaryTypes","getArrayType","resolveBasicType","t","Optional","raw","resolveType","arrayType","Array","dictionaryType","Dictionary","mapArgument","rawType","rawValue","plugins","resolvedType","fixedType","isString","isCharacter","isBoolean","isBasicType","fcl","arg","isFixedNumType","isNaN","parseFloat","msg","throwTypeError","toFixed","isAddress","prefixedAddress","sansPrefix","isPath","path","parts","domain","identifier","parsePath","Promise","all","mappedValue","finalValue","keyType","valueType","array","body","i","fixedKey","parseInt","resolvedValue","_mapArgument","_cycle","thenable","reject","props","resolver","applyPlugins","applied","mapArguments","schema","values","mapped","xform","asArgument","mapValuesToCode","resolveArguments","arr","convert","unwrap","rawArgs","CURRENT_SPORK_ROOT","getLatestBlock","send","getBlock","decode","getChainHeight","topBlock","height","getEventName","event","eventName","getEventsInRange","range","toRange","warn","fromRange","getEventsAtBlockHeightRange","from","to","ec","EC","signWithKey","privateKey","msgHex","sig","keyFromPrivate","Buffer","sign","sha","SHA3","update","digest","hashMsgHex","r","toArrayLike","concat","toString","processSigner","signer","undefined","keyId","warning","addr","pkey","account","signingFunction","data","signature","message","tempId","authorization","recover","prepareInteraction","cadence","limit","processed","codeTemplate","defaultLimit","ix","proposer","payer","ixSigners","ixProposer","authorizations","ixAddressMap","ixCode","script","transaction","resolvedArgs","executeScript","response","encodedData","decoded","sendTransaction","wait","transactionId","waitMethod","statusValue","status","toLowerCase","log","waitForStatus","tx","rawResult","txResult","txId","_exit","deployContract","contractCode","ixContractCode","hexedCode","ixPayer","opts","step","sporkLimit","resolve","findEvents","events","clearInterval","intervalId","currentRange","maxRange","latestBlock","setTimeout","delay","err","start","Infinity","plugin","typedPlugins","put","found","required","itemType","networkName","options","network","port","endpoint","extend","portBased","accessNode","trimWith","splitBy","text","word","join"],"mappings":"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"}