import*as e from"@onflow/sdk";import{config as n,arg as t,send as r,getTransactionStatus as a,decode as s,resolve as o,pipe as i,interaction as c,createSignableVoucher as d,latestBlock as l,getEvents as u,encodeMessageFromSignable as p}from"@onflow/sdk";export{TestUtils,account,arg,args,atBlockHeight,atBlockId,authorization,authorizations,block,build,config,createSignableVoucher,decode,getAccount,getBlock,getBlockByHeight,getBlockById,getBlockHeader,getCollection,getEvents,getEventsAtBlockHeightRange,getEventsAtBlockIds,getLatestBlock,getTransaction,getTransactionStatus,invariant,isBad,isOk,latestBlock,limit,param,params,payer,ping,pipe,proposer,ref,script,send,transaction,validator,why}from"@onflow/sdk";import{invariant as f}from"@onflow/util-invariant";import*as y from"@onflow/types";import{spawn as g,send as h,SUBSCRIBE as m,UNSUBSCRIBE as E,INIT as w,subscriber as R,snapshoter as v,UPDATED as S,SNAPSHOT as b}from"@onflow/util-actor";import{withPrefix as C,sansPrefix as A}from"@onflow/util-address";export{display,sansPrefix,withPrefix}from"@onflow/util-address";import*as P from"@onflow/rlp";import{encode as I}from"@onflow/rlp";import{uid as D}from"@onflow/util-uid";export{template as cadence,template as cdc}from"@onflow/util-template";const L="0.0.78",N={can:!("undefined"==typeof window),get:async e=>JSON.parse(sessionStorage.getItem(e)),put:async(e,n)=>sessionStorage.setItem(e,JSON.stringify(n))};async function O(e){return Object.fromEntries(Object.entries(await n().where(e)).map(([n,t])=>[n.replace(e,""),t]))}n({"discovery.wallet.method.default":"IFRAME/RPC","fcl.storage.default":N});const k=e=>n=>typeof n===e,F=e=>null!=e,x=k("object"),T=k("string"),_=k("function"),U=k("number");function V(n){return _(n)?n(e.arg,y):[]}async function M(n={}){return await async function(n){f(F(n.cadence),"query({ cadence }) -- cadence is required"),f(T(n.cadence),"query({ cadence }) -- cadence must be a string"),f(await e.config.get("accessNode.api"),'Required value for "accessNode.api" not defined in config. See: https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration')}(n),e.send([e.script(n.cadence),e.args(V(n.args||[])),n.limit&&"number"==typeof n.limit&&e.limit(n.limit)]).then(e.decode)}function H(){return H=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},H.apply(this,arguments)}const j={f_type:"Service",f_vsn:"1.0.0"},z={f_type:"Identity",f_vsn:"1.0.0"},W={f_type:"USER",f_vsn:"1.0.0"},B={f_type:"PollingResponse",f_vsn:"1.0.0"},K={f_type:"CompositeSignature",f_vsn:"1.0.0"};function Y(e){return null==e?null:"1.0.0"===e.f_vsn?e:H({old:e},j,{type:"frame",endpoint:e.endpoint,params:e.params||{},data:e.data||{}})}function J(e){return null==e?null:"1.0.0"===e.f_vsn?e:H({},j,{type:"back-channel-rpc",endpoint:e.endpoint,method:e.method,params:e.params||{},data:e.data||{}})}function $(e){return null==e?null:(null==e.method&&(e=H({},e,{type:"local-view",method:"VIEW/IFRAME"})),"1.0.0"===e.f_vsn?e:H({},j,{type:e.type||"local-view",method:e.method,endpoint:e.endpoint,data:e.data||{},params:e.params||{}}))}const q={"back-channel-rpc":J,"pre-authz":function(e){return null==e?null:"1.0.0"===e.f_vsn?e:H({},j,{type:e.type,uid:e.id,endpoint:e.endpoint,method:e.method,identity:H({},z,{address:C(e.addr),keyId:e.keyId}),params:e.params,data:e.data})},authz:function(e){return null==e?null:"1.0.0"===e.f_vsn?e:H({},j,{type:e.type,uid:e.id,endpoint:e.endpoint,method:e.method,identity:H({},z,{address:C(e.addr),keyId:e.keyId}),params:e.params,data:e.data})},authn:function(e){return null==e?null:"1.0.0"===e.f_vsn?e:H({},j,{type:e.type,uid:e.id,endpoint:e.authn,id:e.pid,provider:{address:C(e.addr),name:e.name,icon:e.icon}})},frame:Y,"open-id":function(e){return null==e?null:"1.0.0"===e.f_vsn?e:null},"user-signature":function(e){if(null==e)return null;if("1.0.0"===e.f_vsn)return e;throw new Error("Invalid user-signature service")},"local-view":$,"account-proof":function(e){if(null==e)return null;if("1.0.0"===e.f_vsn)return e;throw new Error("Invalid account-proof service")},"authn-refresh":function(e){if(null==e)return null;if("1.0.0"===e.f_vsn)return e;throw new Error("Invalid authn-refresh service")}};function G(e){return P.encode([e.provider.address||e.provider.name||"UNSPECIFIED",e.id]).toString("hex")}async function X(e){var n=function(e=[],n=[]){return[...e,...n]}((e=function(e){return e.addr=e.addr?C(e.addr):null,e.paddr=e.paddr?C(e.paddr):null,e}(e)).services||[],await async function(e,n){if(null==e||null==n)return[];const t=new URL(e);t.searchParams.append("code",n);const r=await fetch(t,{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>e.json());if(Array.isArray(r))return r;const a=[];if(Array.isArray(r.authorizations))for(let e of r.authorizations)a.push(H({type:"authz",keyId:r.keyId},e));return null!=r.provider&&a.push(H({type:"authn",id:"wallet-provider#authn"},r.provider)),a}(e.hks,e.code)).map(n=>function(e,n){try{return q[e.type](e,n)}catch(n){return console.error(`Unrecognized FCL Service Type [${e.type}]`,e,n),e}}(n,e));const t=function(e,n){return n.find(e=>"authn"===e.type)}(0,n);return H({},W,{addr:C(e.addr),cid:G(t),loggedIn:!0,services:n,expiresAt:e.expires})}function Z(e=[],n){return e.find(e=>e.type===n)}function Q(e){const n=new URL(e.endpoint);if(n.searchParams.append("l6n",window.location.origin),null!=e.params)for(let[t,r]of Object.entries(e.params||{}))n.searchParams.append(t,r);return n}function ee(e,n={}){const t=n.method||"POST",r="GET"===t?void 0:JSON.stringify(n.data||e.data||{});return fetch(Q(e),{method:t,headers:H({},e.headers||{},n.headers||{},{"Content-Type":"application/json"}),body:r}).then(e=>e.json())}function ne(e){var n,t;return null==e?null:"1.0.0"===e.f_vsn?e:H({},B,{status:null!=(n=e.status)?n:"APPROVED",reason:null!=(t=e.reason)?t:null,data:e.compositeSignature||e.data||H({},e)||{},updates:J(e.authorizationUpdates),local:Y((e.local||[])[0])})}const te={"HTTP/GET":"GET","HTTP/POST":"POST"},re=e=>(f(te[e.method],"Invalid Service Method for type back-channel-rpc",{service:e}),te[e.method]);async function ae(e,n=(()=>!0)){if(f(e,"Missing Polling Service",{service:e}),!n())throw new Error("Externally Halted");const t=await ee(e,{method:re(e)}).then(ne);switch(t.status){case"APPROVED":return t.data;case"DECLINED":throw new Error(`Declined: ${t.reason||"No reason supplied."}`);default:return await new Promise(e=>setTimeout(e,500)),ae(t.updates,n)}}const se="FCL_IFRAME";function oe(e){f(!document.getElementById(se),"Attempt at triggering multiple Frames",{src:e});const n=document.createElement("iframe");return n.src=e,n.id=se,n.allow="usb *; hid *",n.frameBorder="0",n.style.cssText="\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n",document.body.append(n),[n.contentWindow,()=>{document.getElementById(se)&&document.getElementById(se).remove()}]}let ie=null,ce=null;function de(e){var n,t;return null==ie||null!=(n=ie)&&n.closed?(t=window,ie=t.open(e,"FCL_POP",`toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=640, height=770, top=${t.top.outerHeight/2+t.top.screenY-385}, left=${t.top.outerWidth/2+t.top.screenX-320}`)):ce!==e?(ie.location.replace(e),ie.focus()):ie.focus(),ce=e,[ie,()=>{ie&&!ie.closed&&ie.close(),ie=null}]}let le=null,ue=null;function pe(e){var n;return null==le||null!=(n=le)&&n.closed?le=window.open(e,"_blank"):ue!==e?(le.location.replace(e),le.focus()):le.focus(),ue=e,[le,()=>{le&&!le.closed&&le.close(),le=null}]}const fe={"VIEW/IFRAME":oe,"VIEW/POP":de,"VIEW/TAB":pe};async function ye(e,n,t,r){const a=await ee(e,{data:H({fclVersion:"0.0.78",service:{params:e.params,data:e.data,type:e.type},config:r},n)}).then(ne);if("APPROVED"===a.status)return a.data;if("DECLINED"===a.status)throw new Error(`Declined: ${a.reason||"No reason supplied."}`);if("REDIRECT"===a.status)return a;if("PENDING"===a.status){var s=!0;const[e,n]=await async function(e,n={}){try{return fe[e.method](Q(e),n)}catch(t){throw console.error("execLocal({service, opts = {}})",t,{service:e,opts:n}),t}}($(a.local)),t=()=>{try{n(),s=!1}catch(e){console.error("Frame Close Error",e)}};return ae(a.updates,()=>s).then(e=>(t(),e)).catch(e=>{throw console.error(e),t(),e})}throw console.error("Auto Decline: Invalid Response",{service:e,resp:a}),new Error("Auto Decline: Invalid Response")}const ge=e=>"string"==typeof e&&e.toLowerCase(),he=new Set(["monetizationstart","monetizationpending","monetizationprogress","monetizationstop"]),me=(e,n)=>console.warn("DEPRECATION NOTICE",`Received ${e}, please use ${n} for this and future versions of FCL`),Ee=({close:e,send:n,onReady:t,onResponse:r,onMessage:a})=>s=>{try{if("object"!=typeof s.data)return;if(he.has(s.data.type))return;ge(s.data.type)===ge("FCL:VIEW:CLOSE")&&e(),ge(s.data.type)===ge("FCL:VIEW:READY")&&t(s,{send:n,close:e}),ge(s.data.type)===ge("FCL:VIEW:RESPONSE")&&r(s,{send:n,close:e}),a(s,{send:n,close:e}),ge(s.data.type)===ge("FCL:FRAME:READY")&&(me(s.data.type,"FCL:VIEW:READY"),t(s,{send:n,close:e})),ge(s.data.type)===ge("FCL:FRAME:RESPONSE")&&(me(s.data.type,"FCL:VIEW:RESPONSE"),r(s,{send:n,close:e})),ge(s.data.type)===ge("FCL:FRAME:CLOSE")&&(me(s.data.type,"FCL:VIEW:CLOSE"),e()),ge(s.data.type)===ge("FCL::CHALLENGE::RESPONSE")&&(me(s.data.type,"FCL:VIEW:RESPONSE"),r(s,{send:n,close:e})),ge(s.data.type)===ge("FCL::AUTHZ_READY")&&(me(s.data.type,"FCL:VIEW:READY"),t(s,{send:n,close:e})),ge(s.data.type)===ge("FCL::CHALLENGE::CANCEL")&&(me(s.data.type,"FCL:VIEW:CLOSE"),e()),ge(s.data.type)===ge("FCL::CANCEL")&&(me(s.data.type,"FCL:VIEW:CLOSE"),e())}catch(n){console.error("Frame Callback Error",n),e()}},we=()=>{},Re=()=>{},ve=()=>{},Se=()=>{},be={"HTTP/RPC":ye,"HTTP/POST":ye,"IFRAME/RPC":function(e,n,t,r){return new Promise((a,s)=>{var o;const i=D(),c=t.includeOlderJsonRpcCall;n.data=null!=(o=e.data)?o:null,function(e,n={}){if(null==e)return{send:we,close:we};const t=n.onClose||we;window.addEventListener("message",Ee({close:s,send:o,onReady:n.onReady||we,onResponse:n.onResponse||we,onMessage:n.onMessage||we}));const[r,a]=oe(Q(e));return{send:o,close:s};function s(){try{window.removeEventListener("message",Ee),a(),t()}catch(e){console.error("Frame Close Error",e)}}function o(e){try{r.postMessage(JSON.parse(JSON.stringify(e||{})),"*")}catch(n){console.error("Frame Send Error",e,n)}}}(e,{async onReady(t,{send:a}){try{a({type:"FCL:VIEW:READY:RESPONSE",fclVersion:"0.0.78",body:n,service:{params:e.params,data:e.data,type:e.type},config:r}),a({fclVersion:"0.0.78",type:"FCL:FRAME:READY:RESPONSE",body:n,service:{params:e.params,data:e.data,type:e.type},config:r,deprecated:{message:"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE"}}),c&&a({jsonrpc:"2.0",id:i,method:"fcl:sign",params:[n,e.params],deprecated:{message:"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE"}})}catch(e){throw e}},onResponse(e,{close:n}){try{if("object"!=typeof e.data)return;const t=ne(e.data);switch(t.status){case"APPROVED":a(t.data),n();break;case"DECLINED":s(`Declined: ${t.reason||"No reason supplied"}`),n();break;case"REDIRECT":a(t),n();break;default:s("Declined: No reason supplied"),n()}}catch(e){throw console.error("execIframeRPC onResponse error",e),e}},onMessage(e,{close:n}){try{if("object"!=typeof e.data)return;if("2.0"!==e.data.jsonrpc)return;if(e.data.id!==i)return;const t=ne(e.data.result);switch(t.status){case"APPROVED":a(t.data),n();break;case"DECLINED":s(`Declined: ${t.reason||"No reason supplied"}`),n();break;case"REDIRECT":a(t),n();break;default:s("Declined: No reason supplied"),n()}}catch(e){throw console.error("execIframeRPC onMessage error",e),e}},onClose(){s("Declined: Externally Halted")}})})},"POP/RPC":function(e,n,t,r){return new Promise((a,s)=>{const o=D(),{redir:i,includeOlderJsonRpcCall:c}=t;n.data=e.data,function(e,n={}){if(null==e)return{send:Re,close:Re};const t=n.onClose||Re;window.addEventListener("message",Ee({close:o,send:i,onReady:n.onReady||Re,onResponse:n.onResponse||Re,onMessage:n.onMessage||Re}));const[r,a]=de(Q(e)),s=setInterval(function(){r&&r.closed&&o()},500);return{send:i,close:o};function o(){try{window.removeEventListener("message",Ee),clearInterval(s),a(),t()}catch(e){console.error("Popup Close Error",e)}}function i(e){try{r.postMessage(JSON.parse(JSON.stringify(e||{})),"*")}catch(n){console.error("Popup Send Error",e,n)}}}(e,{async onReady(t,{send:a}){try{a({fclVersion:"0.0.78",type:"FCL:VIEW:READY:RESPONSE",body:n,service:{params:e.params,data:e.data,type:e.type},config:r}),a({fclVersion:"0.0.78",type:"FCL:FRAME:READY:RESPONSE",body:n,service:{params:e.params,data:e.data,type:e.type},config:r,deprecated:{message:"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE"}}),c&&a({jsonrpc:"2.0",id:o,method:"fcl:sign",params:[n,e.params]})}catch(e){throw e}},onResponse(e,{close:n}){try{if("object"!=typeof e.data)return;const t=ne(e.data);switch(t.status){case"APPROVED":a(t.data),!i&&n();break;case"DECLINED":s(`Declined: ${t.reason||"No reason supplied"}`),n();break;case"REDIRECT":a(t),n();break;default:s("Declined: No reason supplied"),n()}}catch(e){throw console.error("execPopRPC onResponse error",e),e}},onMessage(e,{close:n}){try{if("object"!=typeof e.data)return;if("2.0"!==e.data.jsonrpc)return;if(e.data.id!==o)return;const t=ne(e.data.result);switch(t.status){case"APPROVED":a(t.data),!i&&n();break;case"DECLINED":s(`Declined: ${t.reason||"No reason supplied"}`),n();break;case"REDIRECT":a(t),n();break;default:s("Declined: No reason supplied"),n()}}catch(e){throw console.error("execPopRPC onMessage error",e),e}},onClose(){s("Declined: Externally Halted")}})})},"TAB/RPC":function(e,n,t,r){return new Promise((a,s)=>{const o=D(),{redir:i,includeOlderJsonRpcCall:c}=t;n.data=e.data,function(e,n={}){if(null==e)return{send:ve,close:ve};const t=n.onClose||ve;window.addEventListener("message",Ee({close:o,send:i,onReady:n.onReady||ve,onResponse:n.onResponse||ve,onMessage:n.onMessage||ve}));const[r,a]=pe(Q(e)),s=setInterval(function(){r&&r.closed&&o()},500);return{send:i,close:o};function o(){try{window.removeEventListener("message",Ee),clearInterval(s),a(),t()}catch(e){console.error("Tab Close Error",e)}}function i(e){try{r.postMessage(JSON.parse(JSON.stringify(e||{})),"*")}catch(n){console.error("Tab Send Error",e,n)}}}(e,{async onReady(t,{send:a}){try{a({fclVersion:"0.0.78",type:"FCL:VIEW:READY:RESPONSE",body:n,service:{params:e.params,data:e.data,type:e.type},config:r}),a({fclVersion:"0.0.78",type:"FCL:FRAME:READY:RESPONSE",body:n,service:{params:e.params,data:e.data,type:e.type},config:r,deprecated:{message:"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE"}}),c&&a({jsonrpc:"2.0",id:o,method:"fcl:sign",params:[n,e.params]})}catch(e){throw e}},onResponse(e,{close:n}){try{if("object"!=typeof e.data)return;const t=ne(e.data);switch(t.status){case"APPROVED":a(t.data),!i&&n();break;case"DECLINED":s(`Declined: ${t.reason||"No reason supplied"}`),n();break;case"REDIRECT":a(t),n();break;default:s("Declined: No reason supplied"),n()}}catch(e){throw console.error("execPopRPC onResponse error",e),e}},onMessage(e,{close:n}){try{if("object"!=typeof e.data)return;if("2.0"!==e.data.jsonrpc)return;if(e.data.id!==o)return;const t=ne(e.data.result);switch(t.status){case"APPROVED":a(t.data),!i&&n();break;case"DECLINED":s(`Declined: ${t.reason||"No reason supplied"}`),n();break;case"REDIRECT":a(t),n();break;default:s("Declined: No reason supplied"),n()}}catch(e){throw console.error("execPopRPC onMessage error",e),e}},onClose(){s("Declined: Externally Halted")}})})},"EXT/RPC":function(e,n,t,r){return new Promise((t,a)=>{!async function(e,n={}){var t;if(null==e)return{send:Se,close:Se};const{endpoint:r}=e,a=n.onClose||Se;window.addEventListener("message",Ee({close:function(){try{window.removeEventListener("message",Ee),a()}catch(e){console.error("Extension Close Error",e)}},send:function(e){try{var n;null==(n=window[r])||n.flow.send(JSON.parse(JSON.stringify(e||{})))}catch(n){console.error("Extension Send Error",e,n)}},onReady:n.onReady||Se,onResponse:n.onResponse||Se,onMessage:n.onMessage||Se})),await(null==(t=window[r])?void 0:t.flow.enable())}(e,{async onReady(t,{send:a}){try{a({fclVersion:"0.0.78",type:"FCL:VIEW:READY:RESPONSE",body:n,service:{params:e.params,data:e.data,type:e.type},config:r})}catch(e){throw e}},onResponse(e,{close:n}){try{if("object"!=typeof e.data)return;const r=ne(e.data);switch(r.status){case"APPROVED":t(r.data),n();break;case"DECLINED":a(`Declined: ${r.reason||"No reason supplied"}`),n();break;case"REDIRECT":t(r),n();break;default:a("Declined: No reason supplied"),n()}}catch(e){throw console.error("execExtRPC onResponse error",e),e}},onClose(){a("Declined: Externally Halted")}})})}};async function Ce({service:e,msg:n={},opts:t={},config:r={}}){const a=H({},r,{services:await O(/^service\./),app:await O(/^app\.detail\./)});try{const r=await be[e.method](e,n,t,a);return"REDIRECT"===r.status?(f(e.type===r.data.type,"Cannot shift recursive service type in execService"),await Ce({service:r.data,msg:n,opts:t,config:a})):r}catch(a){throw console.error("execService({service, msg = {}, opts = {}, config = {}})",a,{service:e,msg:n,opts:t,config:r}),a}}async function Ae(e,n){((e,n)=>{f(/^[0-9a-f]+$/i.test(e),"Signed message must be a hex string"),f(Array.isArray(n)&&n.every((e,n,t)=>"CompositeSignature"===e.f_type),"Must include an Array of CompositeSignatures to verify"),f(n.map(e=>e.addr).every((e,n,t)=>e===t[0]),"User signatures to be verified must be from a single account address")})(e,n);const t=n[0].addr;let r=[],a=[];return n.map(e=>{r.push(e.signature),a.push(e.keyId)}),await M({cadence:Pe,args:(n,s)=>[n(t,s.Address),n(e,s.String),n(a,s.Array([s.Int])),n(r,s.Array([s.String]))]})}const Pe='\n  import Crypto\n\n  pub fun getHashAlgo(_ x: Int): HashAlgorithm {\n    switch x {\n    case 1:\n        return HashAlgorithm.SHA2_256\n    case 2:\n        return HashAlgorithm.SHA2_384\n    case 3:\n        return HashAlgorithm.SHA3_256\n    case 4:\n        return HashAlgorithm.SHA3_384\n    case 5:\n        return HashAlgorithm.KMAC128_BLS_BLS12_381\n    default:\n        return HashAlgorithm.SHA3_256\n    }\n  }\n      \n  pub fun main(\n    acctAddress: Address,\n    message: String,\n    keyIds: [Int],\n    signatures: [String],\n  ): Bool {\n\n    let keyList = Crypto.KeyList()\n    let account = getAccount(acctAddress)\n    \n    let rawPublicKeys: [String] = []\n    let weights: [UFix64] = []\n    let signAlgos: [UInt] = []\n    let hashAlgos: [UInt] = []\n    let uniqueKeys: {Int: Bool} = {}\n    \n    for id in keyIds {\n      uniqueKeys[id] = true\n    }\n\n    assert(uniqueKeys.keys.length == keyIds.length, message: "Invalid KeyId: Duplicate key found for account")\n\n    var counter = 0\n    while (counter < keyIds.length) {\n      let accountKey = account.keys.get(keyIndex: keyIds[counter]) ?? panic("Key provided does not exist on account")\n      rawPublicKeys.append(String.encodeHex(accountKey.publicKey.publicKey))\n      weights.append(accountKey.weight)\n      signAlgos.append(UInt(accountKey.publicKey.signatureAlgorithm.rawValue))\n      hashAlgos.append(UInt(accountKey.hashAlgorithm.rawValue))\n      counter = counter + 1\n    }\n\n    var totalWeight = 0.0\n    for weight in weights {\n      totalWeight = totalWeight + weight\n    }\n    \n    assert(totalWeight >= 1000.0, message: "Signature key weights do not meet threshold >= 1000.0")\n\n    var i = 0\n    for rawPublicKey in rawPublicKeys {\n      keyList.add(\n        PublicKey(\n          publicKey: rawPublicKey.decodeHex(),\n          signatureAlgorithm: signAlgos[i] == 2 ? SignatureAlgorithm.ECDSA_secp256k1  : SignatureAlgorithm.ECDSA_P256\n        ),\n        hashAlgorithm: getHashAlgo(Int(hashAlgos[i])),\n        weight: weights[i]\n      )\n      i = i + 1\n    }\n\n    let signatureSet: [Crypto.KeyListSignature] = []\n\n    var j = 0\n    for signature in signatures {\n      signatureSet.append(\n        Crypto.KeyListSignature(\n          keyIndex: j,\n          signature: signature.decodeHex()\n        )\n      )\n      j = j + 1\n    }\n      \n    let signedData = message.decodeHex()\n    \n    return keyList.verify(\n      signatureSet: signatureSet,\n      signedData: signedData\n    )\n  }\n';function Ie(e){return null==e?null:"1.0.0"===e.f_vsn?e:H({},K,{addr:A(e.addr||e.address),signature:e.signature||e.sig,keyId:e.keyId})}const De="CURRENT_USER",Le="CURRENT_USER/UPDATED",Ne='{\n  "f_type": "User",\n  "f_vsn": "1.0.0",\n  "addr":null,\n  "cid":null,\n  "loggedIn":null,\n  "expiresAt":null,\n  "services":[]\n}',Oe={[w]:async e=>{"undefined"==typeof window&&console.warn('\n        %cFCL Warning\n        ============================\n        "currentUser" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        ',"font-weight:bold;font-family:monospace;"),e.merge(JSON.parse(Ne));const t=await n.first(["fcl.storage","fcl.storage.default"]);if(t.can){const n=await(async e=>{const n=JSON.parse(Ne),t=await e.get(De);return null!=t&&n.f_vsn!==t.f_vsn?(e.removeItem(De),n):t||n})(t);(function(e){return null==e.expiresAt||0===e.expiresAt||e.expiresAt>Date.now()})(n)&&e.merge(n)}},[m]:(e,n)=>{e.subscribe(n.from),e.send(n.from,Le,H({},e.all()))},[E]:(e,n)=>{e.unsubscribe(n.from)},SNAPSHOT:async(e,n)=>{n.reply(H({},e.all()))},SET_CURRENT_USER:async(e,t,r)=>{e.merge(r);const a=await n.first(["fcl.storage","fcl.storage.default"]);a.can&&a.put(De,e.all()),e.broadcast(Le,H({},e.all()))},DEL_CURRENT_USER:async(e,t)=>{e.merge(JSON.parse(Ne));const r=await n.first(["fcl.storage","fcl.storage.default"]);r.can&&r.put(De,e.all()),e.broadcast(Le,H({},e.all()))}},ke=()=>g(Oe,De);async function Fe({service:e,redir:t=!1}={}){return new Promise(async(r,a)=>{ke();const s=await Ue(),o=await async function(){return{timestamp:Date.now(),appDomainTag:await n.get("fcl.appDomainTag"),extensions:window.fcl_extensions||[]}}(),i={redir:t},c=await async function(){const e=await n.first(["discovery.wallet","challenge.handshake"]),t=await n.get("discovery.authn.include",[]);return{type:"authn",endpoint:e,method:await n.first(["discovery.wallet.method","discovery.wallet.method.default"]),discoveryAuthnInclude:t}}(),d=Z(s.services,"authn-refresh"),l=await n.get("fcl.warning.suppress.redir");if(t&&!l&&console.warn("You are manually enabling a very experimental feature that is not yet standard, use at your own risk.\n         You can disable this warning by setting fcl.warning.suppress.redir to true in your config"),f(e||c.endpoint,'\n        If no service passed to "authenticate," then "discovery.wallet" must be defined in config.\n        See: "https://docs.onflow.org/fcl/reference/api/#setting-configuration-values"\n      '),s.loggedIn){if(!d)return r(s);try{const e=await Ce({service:d,msg:o,opts:i});h(De,"SET_CURRENT_USER",await X(e))}catch(e){console.error("Error: Could not refresh authentication.",e)}finally{return r(await Ue())}}try{const n=await Ce({service:H({},e||c,{method:(null==c?void 0:c.method)||e.method||"IFRAME/RPC"}),msg:o,opts:i,config:{discoveryAuthnInclude:c.discoveryAuthnInclude}});h(De,"SET_CURRENT_USER",await X(n))}catch(e){console.error("Error while authenticating",e)}finally{r(await Ue())}})}function xe(){ke(),h(De,"DEL_CURRENT_USER")}async function Te(e){return ke(),H({},e,{tempId:"CURRENT_USER",async resolve(e,n){const t=await Fe({redir:!0}),r=Z(t.services,"authz"),a=Z(t.services,"pre-authz");if(a)return function(e){const n=(e=>({f_type:"PreAuthzResponse",f_vsn:"1.0.0",proposer:(e||{}).proposer,payer:(e||{}).payer||[],authorization:(e||{}).authorization||[]}))(e),t=[];null!=n.proposer&&t.push(["PROPOSER",n.proposer]);for(let e of n.payer||[])t.push(["PAYER",e]);for(let e of n.authorization||[])t.push(["AUTHORIZER",e]);return t.map(([e,n])=>({tempId:[n.identity.address,n.identity.keyId].join("|"),addr:n.identity.address,keyId:n.identity.keyId,signingFunction:e=>Ce({service:n,msg:e}),role:{proposer:"PROPOSER"===e,payer:"PAYER"===e,authorizer:"AUTHORIZER"===e}}))}(await Ce({service:a,msg:n}));if(r)return H({},e,{tempId:"CURRENT_USER",resolve:null,addr:A(r.identity.address),keyId:r.identity.keyId,sequenceNum:null,signature:null,signingFunction:async e=>Ie(await Ce({service:r,msg:e,opts:{includeOlderJsonRpcCall:!0}}))});throw new Error("No Authz or PreAuthz Service configured for CURRENT_USER")}})}function _e(e){ke();const n="@EXIT",t=g(async t=>{for(t.send(De,m);;){const r=await t.receive();if(r.tag===n)return void t.send(De,E);e(r.data)}});return()=>h(t,n)}function Ue(){return ke(),h(De,"SNAPSHOT",null,{expectReply:!0,timeout:0})}async function Ve(){const{addr:e}=await Fe();return t(C(e),y.Address)}const Me=e=>(f(/^[0-9a-f]+$/i.test(e),"Message must be a hex string"),{message:e});async function He(e){ke();const n=Z((await Fe({redir:!0})).services,"user-signature");f(n,"Current user must have authorized a signing service.");try{const t=await Ce({service:n,msg:Me(e)});return Array.isArray(t)?t.map(e=>Ie(e)):[Ie(t)]}catch(e){return e}}async function je(e,n){return console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n    verifyUserSignatures is no longer exported as fcl.currentUser().verifyUserSignatures\n    and is now available as fcl.verifyUserSignatures\n    ============================\n    ","font-weight:bold;font-family:monospace;"),Ae(e,n)}let ze=()=>({authenticate:Fe,unauthenticate:xe,authorization:Te,signUserMessage:He,verifyUserSignatures:je,subscribe:_e,snapshot:Ue,resolveArgument:Ve});ze.authenticate=Fe,ze.unauthenticate=xe,ze.authorization=Te,ze.signUserMessage=He,ze.verifyUserSignatures=je,ze.subscribe=_e,ze.snapshot=Ue,ze.resolveArgument=Ve;const We=async e=>r([a(e)]).then(s),Be=e=>e.status>=4,Ke=e=>e.status>=3,Ye=e=>e.status>=2,Je={[w]:async e=>{const n=await We(e.self());Be(n)||setTimeout(()=>e.sendSelf("POLL"),2500),e.merge(n)},[m]:(e,n)=>{e.subscribe(n.from),e.send(n.from,S,e.all())},[E]:(e,n)=>{e.unsubscribe(n.from)},[b]:async(e,n)=>{n.reply(e.all())},POLL:async e=>{const n=await We(e.self());var t,r;Be(n)||setTimeout(()=>e.sendSelf("POLL"),2500),t=e.all(),r=n,JSON.stringify(t)!==JSON.stringify(r)&&e.broadcast(S,n),e.merge(n)}},$e=e=>{if("object"==typeof e&&(e=e.transactionId),null==e)throw new Error("transactionId required");return e},qe=e=>g(Je,$e(e));function Ge(e){function n(n){return R($e(e),qe,n)}function t(e){return function(t={}){const r=t.suppress||!1;return new Promise((t,a)=>{const s=n(n=>{n.statusCode&&!r?(a(n.errorMessage),s()):e(n)&&(t(n),s())})})}}return{snapshot:function(){return v(e,qe)},subscribe:n,onceFinalized:t(Ye),onceExecuted:t(Ke),onceSealed:t(Be)}}async function Xe(n={}){var t;try{await async function(n){f(F(n),"mutate(opts) -- opts is required"),f(x(n),"mutate(opts) -- opts must be an object"),f(F(n.cadence),"mutate({ cadence }) -- cadence is required"),f(T(n.cadence),"mutate({ cadence }) -- cadence must be a string"),f(await e.config.get("accessNode.api"),'Required value for "accessNode.api" not defined in config. See: https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration')}(n);const r=await e.config().get("fcl.authz",ze().authorization);return t=e.send([e.transaction(n.cadence),e.args(V(n.args||[])),n.limit&&U(n.limit)&&e.limit(n.limit),e.proposer(n.proposer||n.authz||r),e.payer(n.payer||n.authz||r),e.authorizations(n.authorizations||[n.authz||r])]).then(e.decode),t}catch(e){throw e}}Ge.isUnknown=e=>e.status>=0,Ge.isPending=e=>e.status>=1,Ge.isFinalized=Ye,Ge.isExecuted=Ke,Ge.isSealed=Be,Ge.isExpired=e=>5===e.status;const Ze=async(e=[],t={})=>{const r=await n.first(["sdk.resolve"],t.resolve||o);return Array.isArray(e)&&(e=await i(c(),e)),JSON.stringify(d(await r(e)),null,2)},Qe=async e=>setTimeout(()=>e.sendSelf("TICK"),await n().get("fcl.eventPollRate",1e4)),en={TICK:async e=>{if(!e.hasSubs())return;let n=e.get("hwm");if(null==n)e.put("hwm",await l()),e.put("tick",await Qe(e));else{let t=await l();e.put("hwm",t);const a=await r([u(e.self(),n.height,t.height-1)]).then(s);for(let n of a)e.broadcast("UPDATED",n.data);e.put("tick",await Qe(e))}},[m]:async(e,n)=>{e.hasSubs()||e.put("tick",await Qe(e)),e.subscribe(n.from)},[E]:(e,n)=>{e.unsubscribe(n.from),e.hasSubs()||(clearTimeout(e.get("tick")),e.delete("tick"),e.delete("hwm"))}},nn=e=>g(en,e);function tn(e){return{subscribe:n=>R(e,nn,n)}}async function rn(e=[]){const t=await n.get("discovery.authn.endpoint");f(Boolean(t),'"discovery.authn.endpoint" in config must be defined.');const r=await n.get("discovery.authn.include",[]),a=new URL(t);return fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fclVersion:"0.0.78",include:r})}).then(e=>e.json()).then(n=>[...e,...n])}function an(e=[]){return[...window.fcl_extensions||[],...e]}const sn={[w]:async e=>{"undefined"==typeof window&&console.warn('\n      %cFCL Warning\n      ============================\n      "fcl.discovery" is only available in the browser.\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      ',"font-weight:bold;font-family:monospace;");const n=await(({type:e})=>((...e)=>n=>e.reduce((e,n)=>e.then(n),Promise.resolve(n)))(rn,an,n=>function(e=[],n){return e.filter(e=>e.type===n)}(n,e))([]))({type:"authn"});e.put("results",n)},[m]:(e,n)=>{e.subscribe(n.from),e.send(n.from,"UPDATED",H({},e.all()))},[E]:(e,n)=>e.unsubscribe(n.from),SNAPSHOT:async(e,n)=>n.reply(H({},e.all()))},on=()=>g(sn,"authn"),cn={authn:{subscribe:e=>R("authn",on,e),snapshot:()=>v("authn",on)}},dn=(e,n=(()=>{}))=>{const t=t=>{const{data:r}=t;"object"==typeof r&&null!=typeof r&&r.type===e&&n((e=>{var n;return e.deprecated&&console.warn("DEPRECATION NOTICE",e.deprecated.message),null==e||null==(n=e.body)||delete n.interaction,e})(r))};return window.addEventListener("message",t),()=>window.removeEventListener("message",t)},ln=(e,n={})=>{window.location!==window.parent.location?window.parent.postMessage(H({},n,{type:e}),"*"):window.opener.postMessage(H({},n,{type:e}),"*")},un=(e,n)=>Buffer.from(e.padEnd(2*n,0),"hex");var pn={__proto__:null,sendMsgToFCL:ln,ready:(e,n={})=>{dn("FCL:VIEW:READY:RESPONSE",e),ln("FCL:VIEW:READY")},close:()=>{ln("FCL:VIEW:CLOSE")},approve:e=>{ln("FCL:VIEW:RESPONSE",{f_type:"PollingResponse",f_vsn:"1.0.0",status:"APPROVED",reason:null,data:e})},decline:e=>{ln("FCL:VIEW:RESPONSE",{f_type:"PollingResponse",f_vsn:"1.0.0",status:"DECLINED",reason:e,data:null})},redirect:e=>{ln("FCL:VIEW:RESPONSE",{f_type:"PollingResponse",f_vsn:"1.0.0",status:"REDIRECT",reason:null,data:e})},onMessageFromFCL:dn,encodeMessageFromSignable:p,CompositeSignature:function(e,n,t){this.f_type=K.f_type,this.f_vsn=K.f_vsn,this.addr=C(e),this.keyId=Number(n),this.signature=t},encodeMessageForProvableAuthnSigning:(e,n,t="")=>{f(e,"Encode Message From Provable Authn Error: address must be defined"),f(n,"Encode Message From Provable Authn Error: timestamp must be defined");const r=un(Buffer.from("FLOW-V0.0-user").toString("hex"),32).toString("hex"),a=un(Buffer.from(t).toString("hex"),32).toString("hex");return r+(t?I([a,C(e),n]).toString("hex"):I([C(e),n]).toString("hex"))},encodeMessageForProvableAuthnVerifying:(e,n,t="")=>{f(e,"Encode Message From Provable Authn Error: address must be defined"),f(n,"Encode Message From Provable Authn Error: timestamp must be defined");const r=t?(a=Buffer.from(t).toString("hex"),Buffer.from(a.padEnd(64,0),"hex")).toString("hex"):null;var a;return t?I([r,C(e),n]).toString("hex"):I([C(e),n]).toString("hex")},injectExtService:function(e){"authn"===e.type&&null!=e.endpoint?(Array.isArray(window.fcl_extensions)||(window.fcl_extensions=[]),window.fcl_extensions.push(e)):console.warn("Authn service is required")}};const fn=(e={})=>ze().authenticate(e),yn=()=>ze().unauthenticate(),gn=(e={})=>(ze().unauthenticate(),ze().authenticate(e)),hn=(e={})=>ze().authenticate(e),mn=(e={})=>ze().authenticate(e),En=ze().authorization,wn=y;export{L as VERSION,pn as WalletUtils,fn as authenticate,En as authz,ze as currentUser,cn as discovery,tn as events,mn as logIn,Xe as mutate,M as query,gn as reauthenticate,Ze as serialize,hn as signUp,wn as t,Ge as tx,yn as unauthenticate,Ae as verifyUserSignatures};
//# sourceMappingURL=fcl.modern.js.map
