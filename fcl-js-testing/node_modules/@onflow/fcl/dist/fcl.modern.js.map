{"version":3,"file":"fcl.modern.js","sources":["../src/VERSION.js","../src/config-utils.js","../src/default-config.js","../src/exec/utils/is.js","../src/exec/utils/normalize-args.js","../src/exec/query.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/local-view.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/normalize/open-id.js","../src/current-user/normalize/user-signature.js","../src/current-user/normalize/account-proof.js","../src/current-user/normalize/authn-refresh.js","../src/current-user/build-user.js","../src/current-user/merge-services.js","../src/current-user/fetch-services.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/render-pop.js","../src/current-user/exec-service/strategies/utils/render-tab.js","../src/current-user/exec-service/exec-local.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/strategies/utils/buildMessageHandler.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/pop.js","../src/current-user/exec-service/strategies/utils/tab.js","../src/current-user/exec-service/strategies/utils/extension.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/exec-service/strategies/pop-rpc.js","../src/current-user/exec-service/strategies/tab-rpc.js","../src/current-user/exec-service/strategies/ext-rpc.js","../src/exec/verify.js","../src/current-user/normalize/composite-signature.js","../src/current-user/index.js","../src/transaction/index.js","../src/exec/mutate.js","../src/serialize/index.js","../src/events/index.js","../src/discovery/services.js","../src/discovery/services/authn.js","../src/discovery/index.js","../src/wallet-utils/on-message-from-fcl.js","../src/wallet-utils/send-msg-to-fcl.js","../src/wallet-utils/encode-provable-authn-signing.js","../src/wallet-utils/CompositeSignature.js","../src/wallet-utils/encode-provable-authn-verifying.js","../src/wallet-utils/inject-ext-service.js","../src/fcl.js"],"sourcesContent":["export const VERSION = \"0.0.78\"\n","import {config} from \"@onflow/sdk\"\nimport {VERSION} from \"./VERSION\"\n\nconst isServerSide = () => typeof window === \"undefined\"\n\nconst SESSION_STORAGE = {\n  can: !isServerSide(),\n  get: async key => JSON.parse(sessionStorage.getItem(key)),\n  put: async (key, value) => sessionStorage.setItem(key, JSON.stringify(value)),\n}\n\nconst LOCAL_STORAGE = {\n  can: !isServerSide(),\n  get: async key => JSON.parse(localStorage.getItem(key)),\n  put: async (key, value) => localStorage.setItem(key, JSON.stringify(value)),\n}\n\nconst NO_STORAGE = {\n  can: false,\n}\n\nexport const STORAGE_DEFAULT = SESSION_STORAGE\nexport const DISCOVERY_METHOD = \"IFRAME/RPC\"\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n\nexport async function getDiscoveryService() {\n  const discoveryWallet = await config.first([\n    \"discovery.wallet\",\n    \"challenge.handshake\",\n  ])\n\n  const discoveryAuthnInclude = await config.get(\"discovery.authn.include\", [])\n\n  const discoveryWalletMethod = await config.first([\n    \"discovery.wallet.method\",\n    \"discovery.wallet.method.default\",\n  ])\n\n  return {\n    type: \"authn\",\n    endpoint: discoveryWallet,\n    method: discoveryWalletMethod,\n    discoveryAuthnInclude\n  }\n}\n","import {config} from \"@onflow/sdk\"\nimport {DISCOVERY_METHOD, STORAGE_DEFAULT} from \"./config-utils\"\n\nconfig({\n  \"discovery.wallet.method.default\": DISCOVERY_METHOD,\n  \"fcl.storage.default\": STORAGE_DEFAULT,\n})\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\nimport {isRequired, isObject, isString, isFunc} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\n\n/** Query the Flow Blockchain\n *\n *  @arg {Object} opts         - Query Options and configuration\n *  @arg {string} opts.cadence - Cadence Script used to query Flow\n *  @arg {ArgsFn} opts.args    - Arguments passed to cadence script\n *  @arg {number} opts.limit   - Compute Limit for Query\n *  @returns {Promise<Response>}\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n\n  // prettier-ignore\n  return sdk.send([\n    sdk.script(opts.cadence),\n    sdk.args(normalizeArgs(opts.args || [])),\n    opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n  ]).then(sdk.decode)\n}\n\nasync function preQuery(opts) {\n  invariant(\n    isRequired(opts.cadence),\n    \"query({ cadence }) -- cadence is required\"\n  )\n\n  invariant(\n    isString(opts.cadence),\n    \"query({ cadence }) -- cadence must be a string\"\n  )\n\n  invariant(\n    await sdk.config.get(\"accessNode.api\"),\n    `Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\nimport {normalizeAccountProof} from \"./account-proof\"\nimport {normalizeAuthnRefresh} from \"./authn-refresh\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n  \"account-proof\": normalizeAccountProof,\n  \"authn-refresh\": normalizeAuthnRefresh,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"account-proof\",\n//   \"method\": \"DATA\",\n//   \"uid\": \"awesome-wallet#account-proof\",\n//   \"data\": {\n//     \"f_type\": \"account-proof\",\n//     \"f_vsn\": \"1.0.0\",\n//     \"address\": \"0xUSER\",   // The users address\n//     \"timestamp\": 1630705495551, // UNIX timestamp\n//     \"appDomainTag\": \"AWESOME_DAPP\", // Optional, but recommended. Defaults to \"APP-V0.0-user\"\n//     \"signature\": CompositeSignature, // Optional\n//    }\n// }\n\nexport function normalizeAccountProof(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid account-proof service\")\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn-refresh\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\",  // \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthnRefresh(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid authn-refresh service\")\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.expires,\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED | REDIRECT\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status ?? \"APPROVED\",\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {...resp} || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  return win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","import {renderFrame} from \"./strategies/utils/render-frame\"\nimport {renderPop} from \"./strategies/utils/render-pop\"\nimport {renderTab} from \"./strategies/utils/render-tab\"\nimport {serviceEndpoint} from \"./strategies/utils/service-endpoint\"\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n}\n\nexport async function execLocal(service, opts = {}) {\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeLocalView} from \"../../normalize/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {execLocal} from \"../exec-local\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport async function execHttpPost(service, signable, opts, config) {\n  const resp = await fetchService(service, {\n    data: {\n      fclVersion: VERSION,\n      service: {\n        params: service.params,\n        data: service.data,\n        type: service.type,\n      },\n      config,\n      ...signable,\n    },\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"REDIRECT\") {\n    return resp\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const [_, unmount] = await execLocal(normalizeLocalView(resp.local))\n\n    const close = () => {\n      try {\n        unmount()\n        canContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n\n    return poll(resp.updates, () => canContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","const CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nexport const buildMessageHandler =\n  ({close, send, onReady, onResponse, onMessage}) =>\n  e => {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {renderPop} from \"./render-pop\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n  const [$pop, unmount] = renderPop(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {renderTab} from \"./render-tab\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n  const [$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {buildMessageHandler} from \"./buildMessageHandler\"\nconst noop = () => {}\n\nexport async function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n  const {endpoint: ext} = service\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      onClose()\n    } catch (error) {\n      console.error(\"Extension Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window[ext]?.flow.send(JSON.parse(JSON.stringify(msg || {})))\n    } catch (error) {\n      console.error(\"Extension Send Error\", msg, error)\n    }\n  }\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n  await window[ext]?.flow.enable()\n  return {send, close}\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {configLens} from \"../../config-utils\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n  \"POP/RPC\": execPopRPC,\n  \"TAB/RPC\": execTabRPC,\n  \"EXT/RPC\": execExtRPC,\n}\n\nexport async function execService({service, msg = {}, opts = {}, config = {}}) {\n  const fullConfig = {\n    ...config,\n    services: await configLens(/^service\\./),\n    app: await configLens(/^app\\.detail\\./),\n  }\n\n  try {\n    const res = await STRATEGIES[service.method](\n      service, \n      msg, \n      opts, \n      fullConfig\n    )\n    if (res.status === \"REDIRECT\") {\n      invariant(\n        service.type === res.data.type,\n        \"Cannot shift recursive service type in execService\"\n      )\n      return await execService({\n        service: res.data, \n        msg, \n        opts, \n        config: fullConfig\n      })\n    } else {\n      return res\n    }\n  } catch (error) {\n    console.error(\"execService({service, msg = {}, opts = {}, config = {}})\", error, {\n      service,\n      msg,\n      opts,\n      config\n    })\n    throw error\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n    body.data = service.data ?? null\n\n    frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    body.data = service.data\n\n    pop(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    body.data = service.data\n\n    tab(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {query} from \"../exec/query\"\n\nexport const validateArgs = (msg, compSigs) => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Signed message must be a hex string\")\n  invariant(\n    Array.isArray(compSigs) &&\n      compSigs.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n    \"Must include an Array of CompositeSignatures to verify\"\n  )\n  invariant(\n    compSigs.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n    \"User signatures to be verified must be from a single account address\"\n  )\n  return true\n}\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @param {string} msg - A message string in hexadecimal format\n * @param {Array} compSigs - An array of Composite Signatures\n * @param {string} compSigs[].addr - The account address\n * @param {number} compSigs[].keyId - The account keyId\n * @param {string} compSigs[].signature - The signature to verify\n * @return {bool}\n *\n * @example\n *\n *  const isValid = await fcl.verifyUserSignatures(\n *    Buffer.from('FOO').toString(\"hex\"),\n *    [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}]\n *  )\n */\nexport async function verifyUserSignatures(msg, compSigs) {\n  validateArgs(msg, compSigs)\n\n  const acctAddress = compSigs[0].addr\n  let signatures = []\n  let keyIds = []\n  compSigs.map(cs => {\n    signatures.push(cs.signature)\n    keyIds.push(cs.keyId)\n  })\n\n  return await query({\n    cadence: VERIFY_SIG_SCRIPT,\n    args: (arg, t) => [\n      arg(acctAddress, t.Address),\n      arg(msg, t.String),\n      arg(keyIds, t.Array([t.Int])),\n      arg(signatures, t.Array([t.String])),\n    ],\n  })\n}\n\nconst VERIFY_SIG_SCRIPT = `\n  import Crypto\n\n  pub fun getHashAlgo(_ x: Int): HashAlgorithm {\n    switch x {\n    case 1:\n        return HashAlgorithm.SHA2_256\n    case 2:\n        return HashAlgorithm.SHA2_384\n    case 3:\n        return HashAlgorithm.SHA3_256\n    case 4:\n        return HashAlgorithm.SHA3_384\n    case 5:\n        return HashAlgorithm.KMAC128_BLS_BLS12_381\n    default:\n        return HashAlgorithm.SHA3_256\n    }\n  }\n      \n  pub fun main(\n    acctAddress: Address,\n    message: String,\n    keyIds: [Int],\n    signatures: [String],\n  ): Bool {\n\n    let keyList = Crypto.KeyList()\n    let account = getAccount(acctAddress)\n    \n    let rawPublicKeys: [String] = []\n    let weights: [UFix64] = []\n    let signAlgos: [UInt] = []\n    let hashAlgos: [UInt] = []\n    let uniqueKeys: {Int: Bool} = {}\n    \n    for id in keyIds {\n      uniqueKeys[id] = true\n    }\n\n    assert(uniqueKeys.keys.length == keyIds.length, message: \"Invalid KeyId: Duplicate key found for account\")\n\n    var counter = 0\n    while (counter < keyIds.length) {\n      let accountKey = account.keys.get(keyIndex: keyIds[counter]) ?? panic(\"Key provided does not exist on account\")\n      rawPublicKeys.append(String.encodeHex(accountKey.publicKey.publicKey))\n      weights.append(accountKey.weight)\n      signAlgos.append(UInt(accountKey.publicKey.signatureAlgorithm.rawValue))\n      hashAlgos.append(UInt(accountKey.hashAlgorithm.rawValue))\n      counter = counter + 1\n    }\n\n    var totalWeight = 0.0\n    for weight in weights {\n      totalWeight = totalWeight + weight\n    }\n    \n    assert(totalWeight >= 1000.0, message: \"Signature key weights do not meet threshold >= 1000.0\")\n\n    var i = 0\n    for rawPublicKey in rawPublicKeys {\n      keyList.add(\n        PublicKey(\n          publicKey: rawPublicKey.decodeHex(),\n          signatureAlgorithm: signAlgos[i] == 2 ? SignatureAlgorithm.ECDSA_secp256k1  : SignatureAlgorithm.ECDSA_P256\n        ),\n        hashAlgorithm: getHashAlgo(Int(hashAlgos[i])),\n        weight: weights[i]\n      )\n      i = i + 1\n    }\n\n    let signatureSet: [Crypto.KeyListSignature] = []\n\n    var j = 0\n    for signature in signatures {\n      signatureSet.append(\n        Crypto.KeyListSignature(\n          keyIndex: j,\n          signature: signature.decodeHex()\n        )\n      )\n      j = j + 1\n    }\n      \n    let signedData = message.decodeHex()\n    \n    return keyList.verify(\n      signatureSet: signatureSet,\n      signedData: signedData\n    )\n  }\n`\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import \"../default-config\"\nimport * as t from \"@onflow/types\"\nimport {account, arg, config} from \"@onflow/sdk\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {verifyUserSignatures as verify} from \"../exec/verify\"\nimport {normalizeCompositeSignature} from \"./normalize/composite-signature\"\nimport {getDiscoveryService} from \"../config-utils\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst getStoredUser = async storage => {\n  const fallback = JSON.parse(DATA)\n  const stored = await storage.get(NAME)\n  if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n    storage.removeItem(NAME)\n    return fallback\n  }\n  return stored || fallback\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    if (typeof window === \"undefined\") {\n      console.warn(\n        `\n        %cFCL Warning\n        ============================\n        \"currentUser\" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        `,\n        \"font-weight:bold;font-family:monospace;\"\n      )\n    }\n\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) {\n      const user = await getStoredUser(storage)\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function makeMessage() {\n  return {\n    timestamp: Date.now(),\n    appDomainTag: await config.get(\"fcl.appDomainTag\"),\n    extensions: window.fcl_extensions || [],\n  }\n}\n\nasync function authenticate({service, redir = false} = {}) {\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    const msg = await makeMessage()\n    const opts = {redir}\n    const discoveryService = await getDiscoveryService()\n    const refreshService = serviceOfType(user.services, \"authn-refresh\")\n    const suppressRedirWarning = await config.get(\"fcl.warning.suppress.redir\")\n\n    if (redir && !suppressRedirWarning) {\n      console.warn(\n        `You are manually enabling a very experimental feature that is not yet standard, use at your own risk.\n         You can disable this warning by setting fcl.warning.suppress.redir to true in your config`\n      )\n    }\n    \n    invariant(\n      service || discoveryService.endpoint,\n      `\n        If no service passed to \"authenticate,\" then \"discovery.wallet\" must be defined in config.\n        See: \"https://docs.onflow.org/fcl/reference/api/#setting-configuration-values\"\n      `\n    )\n\n    if (user.loggedIn) {\n      if (refreshService) {\n        try {\n          const response = await execService({\n            service: refreshService,\n            msg,\n            opts,\n          })\n          send(NAME, SET_CURRENT_USER, await buildUser(response))\n        } catch (e) {\n          console.error(\"Error: Could not refresh authentication.\", e)\n        } finally {\n          return resolve(await snapshot())\n        }\n      } else {\n        return resolve(user)\n      }\n    }\n\n    try {\n      const response = await execService({\n        service: {\n          ...(service || discoveryService),\n          method: discoveryService?.method || service.method || \"IFRAME/RPC\"\n        },\n        msg,\n        opts,\n        config: {\n          discoveryAuthnInclude: discoveryService.discoveryAuthnInclude\n        }\n      })\n      send(NAME, SET_CURRENT_USER, await buildUser(response))\n    } catch (e) {\n      console.error(\"Error while authenticating\", e)\n    } finally {\n      resolve(await snapshot())\n    }\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService({service: az, msg: signable})\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    async resolve(account, preSignable) {\n      const user = await authenticate({redir: true})\n      const authz = serviceOfType(user.services, \"authz\")\n      const preAuthz = serviceOfType(user.services, \"pre-authz\")\n\n      if (preAuthz)\n        return resolvePreAuthz(\n          await execService({\n            service: preAuthz,\n            msg: preSignable,\n          })\n        )\n      if (authz)\n        return {\n          ...account,\n          tempId: \"CURRENT_USER\",\n          resolve: null,\n          addr: sansPrefix(authz.identity.address),\n          keyId: authz.identity.keyId,\n          sequenceNum: null,\n          signature: null,\n          async signingFunction(signable) {\n            return normalizeCompositeSignature(\n              await execService({\n                service: authz,\n                msg: signable,\n                opts: {\n                  includeOlderJsonRpcCall: true,\n                },\n              })\n            )\n          },\n        }\n      throw new Error(\n        \"No Authz or PreAuthz Service configured for CURRENT_USER\"\n      )\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nasync function resolveArgument() {\n  const {addr} = await authenticate()\n  return arg(withPrefix(addr), t.Address)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\nasync function signUserMessage(msg) {\n  spawnCurrentUser()\n  const user = await authenticate({redir: true})\n\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    const response = await execService({\n      service: signingService,\n      msg: makeSignable(msg),\n    })\n    if (Array.isArray(response)) {\n      return response.map(compSigs => normalizeCompositeSignature(compSigs))\n    } else {\n      return [normalizeCompositeSignature(response)]\n    }\n  } catch (error) {\n    return error\n  }\n}\n\n// Deprecated\nasync function verifyUserSignatures(msg, compSigs) {\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    verifyUserSignatures is no longer exported as fcl.currentUser().verifyUserSignatures\n    and is now available as fcl.verifyUserSignatures\n    ============================\n    `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n  return verify(msg, compSigs)\n}\n\nlet currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    verifyUserSignatures,\n    subscribe,\n    snapshot,\n    resolveArgument,\n  }\n}\n\ncurrentUser.authenticate = authenticate\ncurrentUser.unauthenticate = unauthenticate\ncurrentUser.authorization = authorization\ncurrentUser.signUserMessage = signUserMessage\ncurrentUser.verifyUserSignatures = verifyUserSignatures\ncurrentUser.subscribe = subscribe\ncurrentUser.snapshot = snapshot\ncurrentUser.resolveArgument = resolveArgument\n\nexport {currentUser}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe(txStatus => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString, isFunc, isNumber} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {transaction} from \"../transaction\"\n\n/** As the current user Mutate the Flow Blockchain\n *\n *  @arg {Object} opts - Mutation Options and configuration\n *  @arg {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @arg {ArgsFn} opts.args - Arguments passed to cadence transaction\n *  @arg {number} opts.limit - Compute Limit for transaction\n *  @returns {string} Transaction Id\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\n\nconst noop = () => {}\n\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await prepMutation(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    // prettier-ignore\n    txid = sdk.send([\n      sdk.transaction(opts.cadence),\n\n      sdk.args(normalizeArgs(opts.args || [])),\n\n      opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n      // opts.proposer > opts.authz > authz\n      sdk.proposer(opts.proposer || opts.authz || authz),\n\n      // opts.payer > opts.authz > authz\n      sdk.payer(opts.payer || opts.authz || authz),\n\n      // opts.authorizations > [opts.authz > authz]\n      sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n    ]).then(sdk.decode)\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n\nasync function prepMutation(opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), \"mutate(opts) -- opts is required\")\n  // prettier-ignore\n  invariant(isObject(opts), \"mutate(opts) -- opts must be an object\")\n  // prettier-ignore\n  invariant(isRequired(opts.cadence), \"mutate({ cadence }) -- cadence is required\")\n  // prettier-ignore\n  invariant(isString(opts.cadence), \"mutate({ cadence }) -- cadence must be a string\")\n  // prettier-ignore\n  invariant(\n    await sdk.config.get(\"accessNode.api\"),\n    `Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config, latestBlock} from \"@onflow/sdk\"\nimport {getEvents} from \"@onflow/sdk\"\nimport {send} from \"@onflow/sdk\"\nimport {decode} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","import {config} from \"@onflow/sdk\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {VERSION} from \"../VERSION\"\n\nconst asyncPipe = (...fns) => input => fns.reduce((chain, fn) => chain.then(fn), Promise.resolve(input))\n\nasync function addServices(services = []) {\n  const endpoint = await config.get(\"discovery.authn.endpoint\")\n  invariant(Boolean(endpoint), `\"discovery.authn.endpoint\" in config must be defined.`)\n\n  const include = await config.get(\"discovery.authn.include\", [])\n  const url = new URL(endpoint)\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      fclVersion: VERSION,\n      include\n    })\n  }).then(d => d.json())\n  .then(json => [...services, ...json])\n}\n\nfunction addExtensions(services = []) {\n  const extensions = window.fcl_extensions || []\n  return [...extensions, ...services]\n}\n\nfunction filterServicesByType(services = [], type) {\n  return services.filter(service => service.type === type)\n}\n\nexport const getServices = ({ type }) => asyncPipe(\n  addServices,\n  addExtensions,\n  s => filterServicesByType(s, type)\n)([])","import {spawn, subscriber, snapshoter, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {getServices} from \"../services\"\n\nconst NAME = \"authn\"\nconst RESULTS = \"results\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst UPDATED = \"UPDATED\"\n\nconst warn = (fact, msg) => {\n  if (fact) {\n    console.warn(\n      `\n      %cFCL Warning\n      ============================\n      ${msg}\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    warn(typeof window === \"undefined\", '\"fcl.discovery\" is only available in the browser.')\n    const services = await getServices({ type: NAME })\n    ctx.put(RESULTS, services)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => ctx.unsubscribe(letter.from),\n  [SNAPSHOT]: async (ctx, letter) => letter.reply({...ctx.all()}),\n}\n\nconst spawnProviders = () => spawn(HANDLERS, NAME)\n\nconst authn = {\n  subscribe: cb => subscriber(NAME, spawnProviders, cb),\n  snapshot: () => snapshoter(NAME, spawnProviders)\n}\n\nexport default authn\n","import authn from \"./services/authn\"\n\nconst discovery = {\n  authn\n}\n\nexport {discovery}","export const onMessageFromFCL = (messageType, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type !== messageType) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","import {onMessageFromFCL} from \"./on-message-from-fcl\"\n\nexport const sendMsgToFCL = (type, msg = {}) => {\n  if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else {\n    window.opener.postMessage({...msg, type}, \"*\")\n  }\n}\n\nexport const ready = (cb, msg = {}) => {\n  onMessageFromFCL(\"FCL:VIEW:READY:RESPONSE\", cb)\n  sendMsgToFCL(\"FCL:VIEW:READY\")\n}\n\nexport const close = () => {\n  sendMsgToFCL(\"FCL:VIEW:CLOSE\")\n}\n\nexport const approve = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"APPROVED\",\n    reason: null,\n    data: data,\n  })\n}\n\nexport const decline = reason => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"DECLINED\",\n    reason: reason,\n    data: null,\n  })\n}\n\nexport const redirect = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"REDIRECT\",\n    reason: null,\n    data: data,\n  })\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {encode} from '@onflow/rlp'\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nexport const encodeMessageForProvableAuthnSigning = (address, timestamp, appDomainTag = \"\") => {\n    invariant(address, \"Encode Message From Provable Authn Error: address must be defined\")\n    invariant(timestamp, \"Encode Message From Provable Authn Error: timestamp must be defined\")\n\n    const USER_DOMAIN_TAG = rightPaddedHexBuffer(Buffer.from(\"FLOW-V0.0-user\").toString(\"hex\"), 32).toString(\"hex\")\n    const APP_DOMAIN_TAG = rightPaddedHexBuffer(Buffer.from(appDomainTag).toString(\"hex\"), 32).toString(\"hex\")\n\n    return USER_DOMAIN_TAG + (appDomainTag ? \n        encode([APP_DOMAIN_TAG, withPrefix(address), timestamp]).toString(\"hex\")\n        :\n        encode([withPrefix(address), timestamp]).toString(\"hex\")\n    )\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {COMPOSITE_SIGNATURE_PRAGMA} from \"../current-user/normalize/__vsn\"\n\nexport function CompositeSignature(addr, keyId, signature) {\n  this.f_type = COMPOSITE_SIGNATURE_PRAGMA.f_type\n  this.f_vsn = COMPOSITE_SIGNATURE_PRAGMA.f_vsn\n  this.addr = withPrefix(addr)\n  this.keyId = Number(keyId)\n  this.signature = signature\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {encode} from '@onflow/rlp'\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nexport const encodeMessageForProvableAuthnVerifying = (address, timestamp, appDomainTag = \"\") => {\n    invariant(address, \"Encode Message From Provable Authn Error: address must be defined\")\n    invariant(timestamp, \"Encode Message From Provable Authn Error: timestamp must be defined\")\n\n    const APP_DOMAIN_TAG = appDomainTag ? rightPaddedHexBuffer(Buffer.from(appDomainTag).toString(\"hex\"), 32).toString(\"hex\") : null\n\n    return (appDomainTag ? \n      encode([APP_DOMAIN_TAG, withPrefix(address), timestamp]).toString(\"hex\")\n      :\n      encode([withPrefix(address), timestamp]).toString(\"hex\")\n    )\n}\n","export function injectExtService(service) {\n  if (service.type === \"authn\" && service.endpoint != null) {\n    if (!Array.isArray(window.fcl_extensions)) {\n      window.fcl_extensions = []\n    }\n    window.fcl_extensions.push(service)\n  } else {\n    console.warn(\"Authn service is required\")\n  }\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {verifyUserSignatures} from \"./exec/verify\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nimport {discovery} from \"./discovery\"\nexport {discovery}\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nexport {TestUtils} from \"@onflow/sdk\"\nexport {config} from \"@onflow/sdk\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {block} from \"@onflow/sdk\"\nexport {latestBlock} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getLatestBlock} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getBlockById} from \"@onflow/sdk\"\nexport {getBlockByHeight} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n"],"names":["VERSION","SESSION_STORAGE","can","window","get","async","JSON","parse","sessionStorage","getItem","key","put","value","setItem","stringify","configLens","regex","Object","fromEntries","entries","config","where","map","replace","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","sdk","arg","t","query","opts","invariant","cadence","preQuery","send","script","args","limit","then","decode","SERVICE_PRAGMA","f_type","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","old","endpoint","params","data","normalizeBackChannelRpc","method","normalizeLocalView","resp","serviceNormalizers","uid","id","identity","address","withPrefix","addr","keyId","authz","authn","pid","provider","name","icon","frame","Error","deriveCompositeId","rlp","encode","toString","buildUser","services","sx1","sx2","mergeServices","paddr","normalizeData","servicesURL","code","url","URL","searchParams","append","fetch","headers","json","Array","isArray","authorizations","push","fetchServices","hks","error","console","normalizeService","find","findService","cid","loggedIn","expiresAt","expires","serviceOfType","serviceEndpoint","location","origin","fetchService","body","undefined","normalizePollingResponse","status","reason","compositeSignature","updates","authorizationUpdates","local","OPTIONS","serviceMethod","poll","canContinue","Promise","r","setTimeout","FRAME","renderFrame","src","document","getElementById","$frame","createElement","allow","frameBorder","style","cssText","contentWindow","remove","popup","previousUrl","renderPop","win","_popup","closed","open","top","outerHeight","screenY","h","outerWidth","screenX","w","focus","close","tab","renderTab","_tab","VIEWS","execHttpPost","signable","fclVersion","_","unmount","execLocal","serviceResponse","catch","e","toLowerCase","IGNORE","Set","deprecate","was","want","warn","buildMessageHandler","onReady","onResponse","onMessage","has","noop","STRATEGIES","resolve","reject","includeOlderJsonRpcCall","onClose","addEventListener","removeEventListener","msg","postMessage","deprecated","message","jsonrpc","result","redir","$pop","timer","setInterval","clearInterval","pop","$tab","ext","flow","_window$ext2","enable","extension","execService","fullConfig","app","res","verifyUserSignatures","compSigs","test","every","sig","i","arr","cs","validateArgs","acctAddress","signatures","keyIds","signature","VERIFY_SIG_SCRIPT","Address","String","Int","normalizeCompositeSignature","sansPrefix","NAME","UPDATED","DATA","HANDLERS","INIT","ctx","merge","storage","first","user","fallback","stored","removeItem","getStoredUser","Date","now","notExpired","SUBSCRIBE","letter","subscribe","from","all","UNSUBSCRIBE","unsubscribe","SNAPSHOT","reply","SET_CURRENT_USER","broadcast","DEL_CURRENT_USER","spawnCurrentUser","spawn","authenticate","snapshot","timestamp","appDomainTag","extensions","fcl_extensions","makeMessage","discoveryService","discoveryWallet","discoveryAuthnInclude","getDiscoveryService","refreshService","suppressRedirWarning","response","unauthenticate","authorization","account","tempId","preSignable","preAuthz","proposer","payer","normalizePreAuthzResponse","axs","az","role","join","signingFunction","authorizer","resolvePreAuthz","sequenceNum","callback","EXIT","self","receive","tag","expectReply","timeout","resolveArgument","makeSignable","signUserMessage","signingService","verify","currentUser","fetchTxStatus","fclSend","getTransactionStatus","transactionId","isSealed","tx","isExecuted","isFinalized","sendSelf","SNAPSHOT$2","POLL","cur","next","scoped","spawnTransaction","transaction","subscriber","once","predicate","suppress","unsub","txStatus","statusCode","errorMessage","snapshoter","onceFinalized","onceExecuted","onceSealed","mutate","txid","prepMutation","isUnknown","isPending","isExpired","serialize","resolveFunction","defaultResolve","pipe","interaction","createSignableVoucher","scheduleTick","TICK","hasSubs","hwm","latestBlock","getEvents","height","clearTimeout","delete","spawnEvents","events","addServices","Boolean","include","addExtensions","fns","input","reduce","chain","fn","asyncPipe","s","filter","filterServicesByType","getServices","spawnProviders","discovery","cb","onMessageFromFCL","messageType","internal","buildData","sendMsgToFCL","parent","opener","rightPaddedHexBuffer","pad","Buffer","padEnd","this","Number","USER_DOMAIN_TAG","APP_DOMAIN_TAG","reauthenticate","signUp","logIn","types"],"mappings":"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"}