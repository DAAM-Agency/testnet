{"version":3,"file":"fcl.module.js","sources":["../src/default-config.js","../src/VERSION.js","../src/exec/utils/is.js","../src/exec/utils/normalize-args.js","../src/exec/query.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/normalize/open-id.js","../src/current-user/normalize/user-signature.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/normalize/composite-signature.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/index.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/transaction/index.js","../src/exec/mutate.js","../src/serialize/index.js","../src/events/index.js","../src/fcl.js"],"sourcesContent":["import {config} from \"@onflow/sdk\"\n\nconfig()\n  .put(\"accessNode.api\", \"http://localhost:8080\")\n  .put(\"challenge.handshake\", \"http://localhost:8700/authenticate\")\n","export const VERSION = \"0.0.73\"\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\nimport {isRequired, isObject, isString, isFunc} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\n\n/** Query the Flow Blockchain\n *\n *  @arg {Object} opts         - Query Options and configuration\n *  @arg {string} opts.cadence - Cadence Script used to query Flow\n *  @arg {ArgsFn} opts.args    - Arguments passed to cadence script\n *  @arg {number} opts.limit   - Compute Limit for Query\n *  @returns {Promise<Response>}\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n\n  // prettier-ignore\n  return sdk.send([\n    sdk.script(opts.cadence),\n    sdk.args(normalizeArgs(opts.args || [])),\n    opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n  ]).then(sdk.decode)\n}\n\nasync function preQuery(opts) {\n  invariant(\n    isRequired(opts.cadence),\n    \"query({ cadence }) -- cadence is required\"\n  )\n\n  invariant(\n    isString(opts.cadence),\n    \"query({ cadence }) -- cadence must be a string\"\n  )\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.exp,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status,\n        reason: resp.reason,\n        data: resp.compositeSignature || resp.data || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100vh;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame, unmount]\n}\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:FRAME:CLOSE\"\nconst READY_EVENT = \"FCL:FRAME:READY\"\nconst RESPONSE_EVENT = \"FCL:FRAME:RESPONSE\"\nconst OPEN_EVENT = \"FCL:FRAME:OPEN\"\n\nconst noop = () => {}\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (e.data.type === CLOSE_EVENT) close()\n      if (e.data.type === READY_EVENT) onReady(e, {send, close})\n      if (e.data.type === RESPONSE_EVENT) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (e.data.type === \"FCL::CHALLENGE::RESPONSE\") {\n        onResponse(e, {send, close})\n      }\n      if (e.data.type === \"FCL::AUTHZ_READY\") onReady(e, {send, close})\n      if (e.data.type === \"FCL::CHALLENGE::CANCEL\") close()\n      if (e.data.type === \"FCL::CANCEL\") close()\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.contentWindow.postMessage(\n        JSON.parse(JSON.stringify(msg || {})),\n        \"*\"\n      )\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n\n  function open(msg) {\n    try {\n      tab = window.open(msg.endpoint)\n      tab.focus()\n    } catch (error) {\n      console.error(\"Frame Open Error\", msg, error)\n    }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {serviceEndpoint} from \"./utils/service-endpoint\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\nimport {frame} from \"./utils/frame\"\nimport {poll} from \"./utils/poll\"\n\nexport async function execHttpPost(service, signable, opts) {\n  signable.data = service.data\n  const resp = await fetchService(service, {\n    data: signable,\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const {close: closeFrame} = frame(resp.local, {\n      onClose() {\n        canContinue = false\n      },\n    })\n\n    return poll(resp.updates, () => canContinue)\n      .then(compositeSignature => {\n        closeFrame()\n        return normalizeCompositeSignature(compositeSignature)\n      })\n      .catch(error => {\n        console.error(error)\n        closeFrame()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n}\n\nexport async function execService(service, msg, opts = {}) {\n  try {\n    return STRATEGIES[service.method](service, msg, opts)\n  } catch (error) {\n    console.error(\"execService(service, msg)\", error, {service, msg, opts})\n    throw error\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\n\nexport function execIframeRPC(service, body, opts) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    body.data = service.data\n\n    frame(service, {\n      onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {send, close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(normalizeCompositeSignature(resp.data))\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(normalizeCompositeSignature(resp.data))\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import \"../default-config\"\nimport {account, config} from \"@onflow/sdk\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {frame} from \"./exec-service/strategies/utils/frame\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst coldStorage = {\n  get: async () => {\n    const fallback = JSON.parse(DATA)\n    const stored = JSON.parse(sessionStorage.getItem(NAME))\n    if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n      sessionStorage.removeItem(NAME)\n      return fallback\n    }\n    return stored || fallback\n  },\n  put: async data => {\n    sessionStorage.setItem(NAME, JSON.stringify(data))\n    return data\n  },\n}\n\nconst canColdStorage = () => {\n  return config().get(\"persistSession\", true)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) {\n      const user = await coldStorage.get()\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst identity = v => v\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n\nasync function authenticate(opts = {}) {\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    if (user.loggedIn && notExpired(user)) return resolve(user)\n    const serviceStrategy = opts.serviceStrategy || frame\n\n    serviceStrategy(\n      {\n        endpoint:\n          (await config().get(\"discovery.wallet\")) ||\n          (await config().get(\"challenge.handshake\")),\n      },\n      {\n        async onReady(e, {send, close}) {\n          send({\n            type: \"FCL:AUTHN:CONFIG\",\n            services: await configLens(/^service\\./),\n            app: await configLens(/^app\\.detail\\./),\n          })\n        },\n        async onClose() {\n          resolve(await snapshot())\n        },\n        async onResponse(e, {close}) {\n          send(NAME, SET_CURRENT_USER, await buildUser(e.data))\n          resolve(await snapshot())\n          close()\n        },\n      }\n    )\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService(az, signable)\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const authz = serviceOfType(user.services, \"authz\")\n\n  const preAuthz = serviceOfType(user.services, \"pre-authz\")\n  if (preAuthz) {\n    return {\n      ...account,\n      tempId: \"CURRENT_USER\",\n      async resolve(account, preSignable) {\n        return resolvePreAuthz(await execService(preAuthz, preSignable))\n      },\n    }\n  }\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    resolve: null,\n    addr: sansPrefix(authz.identity.address),\n    keyId: authz.identity.keyId,\n    sequenceNum: null,\n    signature: null,\n    async signingFunction(signable) {\n      return execService(authz, signable, {\n        includeOlderJsonRpcCall: true,\n      })\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\nasync function signUserMessage(msg, opts = {}) {\n  spawnCurrentUser()\n  const user = await authenticate(opts)\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    return await execService(signingService, makeSignable(msg))\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    subscribe,\n    snapshot,\n  }\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe(txStatus => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString, isFunc, isNumber} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {transaction} from \"../transaction\"\n\n/** As the current user Mutate the Flow Blockchain\n *\n *  @arg {Object} opts - Mutation Options and configuration\n *  @arg {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @arg {ArgsFn} opts.args - Arguments passed to cadence transaction\n *  @arg {number} opts.limit - Compute Limit for transaction\n *  @returns {string} Transaction Id\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\n\nconst noop = () => {}\n\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await prepMutation(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    // prettier-ignore\n    txid = sdk.send([\n      sdk.transaction(opts.cadence),\n\n      sdk.args(normalizeArgs(opts.args || [])),\n\n      opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n      // opts.proposer > opts.authz > authz\n      sdk.proposer(opts.proposer || opts.authz || authz),\n\n      // opts.payer > opts.authz > authz\n      sdk.payer(opts.payer || opts.authz || authz),\n\n      // opts.authorizations > [opts.authz > authz]\n      sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n    ]).then(sdk.decode)\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n\nasync function prepMutation(opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), \"mutate(opts) -- opts is required\")\n  // prettier-ignore\n  invariant(isObject(opts), \"mutate(opts) -- opts must be an object\")\n  // prettier-ignore\n  invariant(isRequired(opts.cadence), \"mutate({ cadence }) -- cadence is required\")\n  // prettier-ignore\n  invariant(isString(opts.cadence), \"mutate({ cadence }) -- cadence must be a string\")\n}\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  // prettier-ignore\n  const resolveFunction = await config()\n    .get(\"sdk.resolve\", opts.resolve || defaultResolve(opts))\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config, latestBlock} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nimport {send} from \"@onflow/sdk\"\nimport {decode} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nexport const authenticate = opts => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = () => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate()\n}\nexport const signUp = opts => currentUser().authenticate()\nexport const logIn = opts => currentUser().authenticate()\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\nexport const t = types\n\nexport {config} from \"@onflow/sdk\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {latestBlock} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getLatestBlock} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getBlockById} from \"@onflow/sdk\"\nexport {getBlockByHeight} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n"],"names":["config","put","VERSION","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","sdk","arg","t","query","opts","invariant","cadence","preQuery","send","script","args","limit","then","decode","SERVICE_PRAGMA","f_type","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","old","endpoint","params","data","normalizeBackChannelRpc","method","serviceNormalizers","back-channel-rpc","pre-authz","uid","id","identity","address","withPrefix","addr","keyId","authz","authn","pid","provider","name","icon","frame","open-id","user-signature","Error","deriveCompositeId","rlp","encode","toString","serviceOfType","services","find","serviceEndpoint","url","URL","searchParams","append","window","location","origin","Object","entries","fetchService","body","undefined","JSON","stringify","fetch","headers","Content-Type","json","normalizePollingResponse","resp","status","reason","compositeSignature","updates","authorizationUpdates","local","normalizeCompositeSignature","sansPrefix","signature","sig","FRAME","noop","IGNORE","Set","close","onClose","onMessage","onReady","onResponse","addEventListener","internal","src","document","getElementById","$frame","createElement","allow","frameBorder","style","cssText","remove","renderFrame","unmount","e","has","error","console","removeEventListener","msg","contentWindow","postMessage","parse","poll","canContinue","serviceMethod","Promise","r","setTimeout","OPTIONS","HTTP/GET","HTTP/POST","execHttpPost","signable","closeFrame","execService","STRATEGIES","HTTP/RPC","IFRAME/RPC","resolve","reject","includeOlderJsonRpcCall","_","jsonrpc","result","pact","state","value","s","o","_settle","bind","v","observer","signUserMessage","spawnCurrentUser","authenticate","user","signingService","recover","makeSignable","log","authorization","account","preAuthz","tempId","preSignable","resolvePreAuthz","sequenceNum","signingFunction","_Pact","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","snapshot","loggedIn","notExpired","serviceStrategy","get","configLens","app","paddr","normalizeData","servicesURL","code","Array","isArray","authorizations","push","fetchServices","hks","sx1","sx2","map","normalizeService","findService","cid","expiresAt","exp","buildUser","NAME","SET_CURRENT_USER","regex","where","fromEntries","replace","UPDATED","DATA","coldStorage","sessionStorage","setItem","canColdStorage","HANDLERS","INIT","ctx","merge","fallback","stored","getItem","removeItem","SUBSCRIBE","letter","subscribe","from","all","UNSUBSCRIBE","unsubscribe","reply","broadcast","spawn","Date","now","unauthenticate","proposer","payer","normalizePreAuthzResponse","axs","role","az","join","authorizer","EXIT","self","test","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","receive","tag","_exit2","expectReply","timeout","message","currentUser","fetchTxStatus","transactionId","fclSend","getTransactionStatus","isSealed","tx","isExecuted","isFinalized","sendSelf","SNAPSHOT","cur","next","scoped","spawnTransaction","transaction","subscriber","once","predicate","suppress","unsub","txStatus","statusCode","errorMessage","snapshoter","onceFinalized","onceExecuted","onceSealed","isUnknown","isPending","isExpired","mutate","prepMutation","serialize","defaultResolve","resolveFunction","createSignableVoucher","pipe","interaction","scheduleTick","hasSubs","hwm","latestBlock","_put4","_put2","getEvents","height","_put3","_put6","clearTimeout","spawnEvents","key","events","reauthenticate","signUp","logIn","types"],"mappings":"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"}